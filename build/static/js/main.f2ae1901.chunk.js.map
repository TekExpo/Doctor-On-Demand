{"version":3,"sources":["assets/hero.svg","components/CommandPanel.tsx","components/styles/MediaControls.styles.ts","components/MediaControls.tsx","components/styles/LocalSettings.styles.ts","components/LocalSettings.tsx","Utils/Utils.ts","core/actions/calls.ts","core/actions/controls.ts","core/actions/devices.ts","core/actions/streams.ts","core/sideEffects.ts","components/styles/ParticipantStack.styles.ts","components/ParticipantStack.tsx","containers/ParticipantStack.ts","components/styles/CommandPanel.styles.ts","components/styles/Header.styles.ts","core/constants.ts","containers/Header.ts","components/LocalPreview.tsx","components/Header.tsx","components/styles/MediaGallery.styles.ts","components/styles/StreamMedia.styles.ts","components/LocalStreamMedia.tsx","components/RemoteStreamMedia.tsx","containers/MediaGallery.ts","components/MediaGallery.tsx","components/styles/MediaFullScreen.styles.ts","components/MediaFullScreen.tsx","components/styles/GroupCall.styles.ts","containers/GroupCall.ts","components/GroupCall.tsx","core/reducers/devices.ts","core/reducers/streams.ts","core/reducers/controls.ts","core/reducers/calls.ts","core/reducers/index.ts","core/reducers/sdk.ts","core/actions/sdk.ts","components/styles/EndCall.styles.ts","components/EndCall.tsx","components/styles/HomeScreen.styles.ts","components/HomeScreen.tsx","components/styles/LocalPreview.styles.ts","components/styles/Configuration.styles.ts","components/DisplayNameField.tsx","containers/Configuration.ts","components/Configuration.tsx","App.tsx","index.tsx","assets/staticmedia.svg"],"names":["module","exports","CommandPanelTypes","palette","getTheme","mediaControlStyles","mergeStyles","height","padding","display","borderRadius","overflow","controlButtonStyle","backgroundColor","white","width","border","marginRight","color","neutralSecondary","controlButtonDisabledStyle","neutralLight","endCallButtonStyle","marginLeft","selectors","endCallButtonTextStyle","fontSize","lineHeight","fullWidth","props","cameraActive","cameraPermission","cameraDisabled","cameraOnClick","onCameraChange","undefined","micActive","microphonePermission","micDisabled","micOnClick","onMicChange","screenShareDisabled","activeScreenShareStream","Stack","className","CommandButton","onKeyDownCapture","e","keyCode","localVideoRendererIsBusy","preventDefault","disabled","onClick","CallVideoIcon","size","CallVideoOffIcon","MicIcon","MicOffIcon","isLocalScreenShareSupportedInBrowser","onScreenShareChange","screenShareActive","CallControlCloseTrayIcon","CallControlPresentNewIcon","onEndCallClick","compressedMode","CallEndIcon","mainStackTokens","childrenGap","micStackTokens","dropDownStyles","caretDownWrapper","dropdownItem","fontWeight","dropdown","title","label","localSettingsContainer","maxWidth","minWidth","maxHeight","marginTop","getDropDownList","list","map","item","val","key","id","text","name","deviceType","tokens","Dropdown","placeholder","options","videoDeviceList","styles","length","defaultSelectedKey","videoDeviceInfo","onChange","index","setVideoDeviceInfo","audioDeviceList","audioDeviceInfo","setAudioDeviceInfo","utils","getAppServiceUrl","window","location","origin","getTokenForUser","userId","a","fetch","concat","encodeURIComponent","response","ok","json","Error","getGroupID","isSelectedAudioDeviceInList","selected","filter","isSelectedVideoDeviceInList","isMobileSession","navigator","userAgent","match","isSmallScreen","innerWidth","innerHeight","getId","identifier","isCommunicationUser","communicationUserId","isCallingApplication","callingApplicationId","isPhoneNumber","phoneNumber","getStreamId","stream","type","isOnIphoneAndNotSafari","includes","getBuildTime","setCallAgent","callAgent","callAdded","addedCall","call","callRemoved","removedCall","group","incomingCallEndReason","isIncoming","callEndReason","groupCallEndReason","setCallState","callState","setParticipants","participants","remoteParticipants","setMic","mic","setShareScreen","shareScreen","setDeviceManager","deviceManager","setMicrophonePermission","setCameraPermission","setAudioDeviceList","setVideoDeviceList","setLocalVideoStream","localVideoStream","addScreenShareStream","user","setMicrophone","dispatch","getState","state","calls","console","error","controls","unmute","mute","endCall","hangUp","catch","joinGroup","context","callOptions","join","log","removeParticipant","subscribeToParticipant","participant","on","values","added","forEach","addedStream","isAvailable","updateAudioDevices","getMicrophoneList","microphoneList","devices","updateVideoDevices","cameraList","getCameraList","subscribeToDeviceManager","getPermissionState","cameraPermissionState","microphonePermissionState","askDevicePermission","then","audio","video","itemStyles","root","alignSelf","primaryText","overFlowButtonStyles","participantStackStyle","paddingLeft","paddingRight","iconStyle","margin","participantStackTokens","onRenderItem","Persona","PersonaSize","size32","presence","PersonaPresence","online","offline","isScreenSharing","FontIcon","iconName","onRenderOverflowButton","overflowItems","IconButton","role","menuIconProps","menuProps","items","connector","connect","sdk","screenShareStreams","streams","screenShareStream","displayName","push","i","OverflowSet","vertical","getParticipants","fullHeightStyles","paneFooterStyles","marginBottom","paneFooterTokens","textFieldStyles","field","fieldGroup","paneHeaderStyle","paneHeaderTextStyle","float","footerMainTextStyle","copyLinkButtonStyle","copyIconStyle","settingsContainerStyle","copyJoinLink","document","getElementById","select","execCommand","Item","selectedPane","People","verticalAlign","Separator","TextField","value","baseURI","PrimaryButton","Icon","Settings","pivotItemStyles","linkIsSelected","themePrimary","link","headerContainer","boxShadow","flexDirection","justifyContent","alignItems","headerCenteredContainer","separatorContainerStyle","pivotItemStyle","separatorStyles","Constants","INCOMING","RINGING","CONNECTING","CONNECTED","DEFAULT_IMG_WIDTH","CROP_MEDIA","CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID","LOCAL_VIDEO_PREVIEW_ID","rendererView","actionable","forEveryone","endCallHandler","screenWidth","setScreenShare","screenShare","startScreenSharing","stopScreenSharing","test","toLowerCase","handleLocalVideoOnOff","stopVideo","LocalVideoStream","startVideo","useEffect","localVideoStreams","Pivot","target","getTabId","itemKey","onLinkClick","setSelectedPane","None","togglePeople","initialSelectedKey","selectedKey","PivotItem","onRenderItemLink","SettingsIcon","outline","UserFriendsIcon","MediaControls","localVideo","mediaGalleryStyle","borderRight","borderBottom","mediaGalleryGridStyle","background","neutralLighterAlt","videoHint","bottom","neutralLighter","textAlign","left","position","whiteSpace","mediaContainer","localVideoContainerStyle","transform","useState","available","setAvailable","imageProps","src","staticMediaSVG","toString","imageFit","ImageFit","contain","maximizeFrame","renderer","Renderer","createView","scalingMode","container","childElementCount","appendChild","dispose","style","Image","Label","streamId","renderStream","gridCol","setGridCol","gridRow","setGridRow","calculateNumberOfRows","React","useCallback","Math","ceil","numberOfColumns","sqrt","calculateNumberOfColumns","numberOfRows","gridTemplateRows","gridTemplateColumns","remoteParticipantsMediaGalleryItems","RemoteStreamMedia","videoStreams","localParticipantMediaGalleryItem","LocalStreamMedia","unshift","getMediaGalleryTilesForParticipants","fullScreenStyle","hiddenFullScreenStyle","loadingStyle","loading","setLoading","Spinner","SpinnerSize","xSmall","headerStyles","containerStyles","minHeight","paneStyles","hiddenContainerClassName","activeContainerClassName","isGroup","groupId","audioOptions","muted","deviceInfo","activeScreenShare","horizontalAlign","horizontal","grow","MediaFullScreen","disableShrink","CommandPanel","initialState","reducer","combineReducers","action","newScreenShareStream","buttonsStackTokens","upperStackTokens","endCallContainerStyle","endCallTitleStyle","buttonStyle","videoCameraIconStyle","bottomStackFooterStyle","rejoinHandler","VideoCameraEmphasisIcon","DefaultButton","homeHandler","href","imgStyle","containerTokens","headerStyle","listStyleType","upperStackStyle","imageStyleProps","image","heroSVG","startCallHandler","alt","toggleStyle","imgStyles","toggleButtonsBarToken","localPreviewContainerStyle","neutralPrimaryAlt","toggleButtonsBarStyle","neutralQuaternaryAlt","localPreviewStyle","cover","Toggle","_ev","checked","configurationStackTokens","mainContainerStyle","localSettingsContainerStyle","verticalStackStyle","inputBoxStyle","boxSizing","inputBoxTextStyle","inputBoxWarningStyle","labelFontStyle","overflowWrap","warningStyle","TextFieldStyleProps","autoComplete","inputClassName","ariaLabel","borderless","isEmpty","event","setName","setEmptyWarning","defaultValue","initCallClient","unsupportedStateHandler","tokenResponse","userToken","token","callClient","CallClient","tokenCredential","AzureCommunicationUserCredential","createCallAgent","updateDisplayName","getDeviceManager","reject","isScreenSharingOn","ev","addedRemoteParticipant","removed","rp","v","setUserId","setGroup","updateDevices","emptyWarning","LocalPreview","DisplayNameField","LocalSettings","ariaLive","labelPosition","sdkVersion","require","dependencies","lastUpdated","loadTheme","initializeIcons","store","createStore","applyMiddleware","thunk","setTimeout","App","page","setPage","setScreenWidth","setWindowWidth","addEventListener","removeEventListener","createUserId","random","getGroupId","URLSearchParams","search","get","HomeScreen","history","pushState","EndCall","split","iconTheme","componentStyles","SvgIcon","svgIconStyles","componentVariables","svgIconVariables","siteVariables","ReactDOM","render","Provider","theme"],"mappings":"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","file":"static/js/main.f2ae1901.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.4acf60cc.svg\";","import React from 'react';\r\nimport NewLocalSettings from './LocalSettings';\r\nimport ParticipantStack from '../containers/ParticipantStack';\r\nimport { VideoDeviceInfo, AudioDeviceInfo } from '@azure/communication-calling';\r\nimport { Stack, Icon, PrimaryButton, TextField, Separator } from '@fluentui/react';\r\nimport {\r\n  fullHeightStyles,\r\n  paneFooterStyles,\r\n  paneFooterTokens,\r\n  textFieldStyles,\r\n  paneHeaderStyle,\r\n  footerMainTextStyle,\r\n  copyLinkButtonStyle,\r\n  copyIconStyle,\r\n  settingsContainerStyle,\r\n  paneHeaderTextStyle\r\n} from './styles/CommandPanel.styles';\r\n\r\nexport interface CommandPanelProps {\r\n  selectedPane: string;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  setSelectedPane: any;\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n}\r\nexport enum CommandPanelTypes {\r\n  None = 'none',\r\n  People = 'People',\r\n  Settings = 'Settings'\r\n}\r\n\r\nconst copyJoinLink = () => {\r\n  const inputElement = document.getElementById('inputText') as HTMLInputElement;\r\n  inputElement.select();\r\n  document.execCommand('copy');\r\n};\r\nexport default (props: CommandPanelProps): JSX.Element => {\r\n  const invitePeopleString = 'Invite people to join';\r\n  const copyJoinInfoString = 'Copy join info';\r\n\r\n  return (\r\n    <Stack styles={fullHeightStyles}>\r\n      <Stack.Item className={paneHeaderStyle}>\r\n        <div className={paneHeaderTextStyle}>{props.selectedPane}</div>\r\n      </Stack.Item>\r\n      <Stack.Item styles={fullHeightStyles}>\r\n        {props.selectedPane === CommandPanelTypes.People && (\r\n          <Stack verticalAlign=\"space-between\" styles={fullHeightStyles}>\r\n            <ParticipantStack />\r\n            <Stack styles={paneFooterStyles} tokens={paneFooterTokens}>\r\n              <Separator />\r\n              <div className={footerMainTextStyle}>{invitePeopleString}</div>\r\n              <TextField styles={textFieldStyles} id=\"inputText\" type=\"text\" value={`${document.baseURI}`}></TextField>\r\n              <PrimaryButton className={copyLinkButtonStyle} onClick={copyJoinLink}>\r\n                <Icon iconName=\"Copy\" className={copyIconStyle} />\r\n                {copyJoinInfoString}\r\n              </PrimaryButton>\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n        {props.selectedPane === CommandPanelTypes.Settings && (\r\n          <div className={settingsContainerStyle}>\r\n            <NewLocalSettings\r\n              videoDeviceList={props.videoDeviceList}\r\n              audioDeviceList={props.audioDeviceList}\r\n              audioDeviceInfo={props.audioDeviceInfo}\r\n              videoDeviceInfo={props.videoDeviceInfo}\r\n              setVideoDeviceInfo={props.setVideoDeviceInfo}\r\n              setAudioDeviceInfo={props.setAudioDeviceInfo}\r\n            />\r\n          </div>\r\n        )}\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n};\r\n","import { mergeStyles, getTheme } from '@fluentui/react';\r\n\r\nconst MODERATE_RED = '#d74654';\r\nconst palette = getTheme().palette;\r\nexport const mediaControlStyles = mergeStyles({\r\n  height: '3.75rem',\r\n  padding: '0 0.8125rem',\r\n  display: 'inline-block',\r\n  borderRadius: 7,\r\n  overflow: 'hidden'\r\n});\r\nexport const controlButtonStyle = mergeStyles({\r\n  backgroundColor: palette.white,\r\n  width: '2rem',\r\n  height: '3.75rem',\r\n  border: '0.125rem',\r\n  borderRadius: 2,\r\n  marginRight: '0.4375rem',\r\n  color: palette.neutralSecondary\r\n});\r\nexport const controlButtonDisabledStyle = mergeStyles(controlButtonStyle, {\r\n  color: palette.neutralLight\r\n});\r\nexport const endCallButtonStyle = mergeStyles({\r\n  backgroundColor: MODERATE_RED,\r\n  width: '6.5625rem',\r\n  height: '2.1875rem',\r\n  border: '0.125rem',\r\n  marginRight: '0.75rem',\r\n  marginLeft: '0.75rem',\r\n  borderRadius: 2,\r\n  color: palette.white,\r\n  selectors: {\r\n    ':focus': { color: palette.white },\r\n    ':hover': { color: palette.white },\r\n    ':active': { color: palette.white }\r\n  }\r\n});\r\nexport const endCallButtonTextStyle = mergeStyles({\r\n  color: palette.white,\r\n  padding: '0.3125rem',\r\n  fontSize: '0.875rem',\r\n  lineHeight: '3.75rem'\r\n});\r\nexport const fullWidth = mergeStyles({\r\n  width: '100%'\r\n});\r\n","import * as React from 'react';\r\nimport { Stack, CommandButton } from '@fluentui/react';\r\nimport {\r\n  MicIcon,\r\n  MicOffIcon,\r\n  CallVideoIcon,\r\n  CallVideoOffIcon,\r\n  CallEndIcon,\r\n  CallControlPresentNewIcon,\r\n  CallControlCloseTrayIcon\r\n} from '@fluentui/react-icons-northstar';\r\nimport {\r\n  controlButtonStyle,\r\n  endCallButtonStyle,\r\n  endCallButtonTextStyle,\r\n  mediaControlStyles,\r\n  fullWidth,\r\n  controlButtonDisabledStyle\r\n} from './styles/MediaControls.styles';\r\nimport { ParticipantStream } from 'core/reducers';\r\n\r\nexport interface MediaControlsProps {\r\n  micActive: boolean;\r\n  screenShareActive: boolean;\r\n  activeScreenShareStream: ParticipantStream | undefined;\r\n  cameraActive: boolean;\r\n  cameraPermission: string;\r\n  microphonePermission: string;\r\n  localVideoRendererIsBusy: boolean;\r\n  compressedMode: boolean;\r\n  onMicChange(): void;\r\n  onCameraChange(): void;\r\n  onScreenShareChange(): void;\r\n  onEndCallClick(): void;\r\n  isLocalScreenShareSupportedInBrowser(): boolean;\r\n}\r\n\r\nexport default (props: MediaControlsProps): JSX.Element => {\r\n  const cameraActive = props.cameraPermission === 'Denied' ? false : props.cameraActive;\r\n  const cameraDisabled = props.cameraPermission === 'Denied';\r\n  const cameraOnClick = props.cameraPermission !== 'Denied' ? props.onCameraChange : undefined;\r\n  const micActive = props.microphonePermission === 'Denied' ? false : props.micActive;\r\n  const micDisabled = props.microphonePermission === 'Denied';\r\n  const micOnClick = props.microphonePermission !== 'Denied' ? props.onMicChange : undefined;\r\n  const screenShareDisabled = !!props.activeScreenShareStream;\r\n\r\n  return (\r\n    <Stack className={mediaControlStyles}>\r\n      <CommandButton\r\n        onKeyDownCapture={(e) => {\r\n          if (e.keyCode === 13 && props.localVideoRendererIsBusy) {\r\n            e.preventDefault();\r\n          }\r\n        }}\r\n        disabled={cameraDisabled}\r\n        onClick={cameraOnClick}\r\n        className={controlButtonStyle}\r\n      >\r\n        <div className={fullWidth}>\r\n          {cameraActive ? <CallVideoIcon size=\"medium\" /> : <CallVideoOffIcon size=\"medium\" />}\r\n        </div>\r\n      </CommandButton>\r\n      <CommandButton onClick={micOnClick} disabled={micDisabled} className={controlButtonStyle}>\r\n        <div className={fullWidth}>{micActive ? <MicIcon size=\"medium\" /> : <MicOffIcon size=\"medium\" />}</div>\r\n      </CommandButton>\r\n      {props.isLocalScreenShareSupportedInBrowser() && (\r\n        <CommandButton\r\n          disabled={screenShareDisabled}\r\n          onClick={props.onScreenShareChange}\r\n          className={screenShareDisabled ? controlButtonDisabledStyle : controlButtonStyle}\r\n        >\r\n          <div className={fullWidth}>\r\n            {props.screenShareActive ? (\r\n              <CallControlCloseTrayIcon size=\"medium\" />\r\n            ) : (\r\n              <CallControlPresentNewIcon size=\"medium\" />\r\n            )}\r\n          </div>\r\n        </CommandButton>\r\n      )}\r\n      <CommandButton\r\n        onClick={props.onEndCallClick}\r\n        className={props.compressedMode ? controlButtonStyle : endCallButtonStyle}\r\n      >\r\n        <div className={fullWidth}>\r\n          <CallEndIcon size=\"medium\" />\r\n          {!props.compressedMode && <span className={endCallButtonTextStyle}>Leave</span>}\r\n        </div>\r\n      </CommandButton>\r\n    </Stack>\r\n  );\r\n};\r\n","import { IStackTokens, mergeStyles, IDropdownStyles } from '@fluentui/react';\r\n\r\nexport const mainStackTokens: IStackTokens = {\r\n  childrenGap: '1.5rem'\r\n};\r\nexport const micStackTokens: IStackTokens = {\r\n  childrenGap: '0.75rem'\r\n};\r\nexport const dropDownStyles: Partial<IDropdownStyles> = {\r\n  caretDownWrapper: {\r\n    height: '2.5rem',\r\n    lineHeight: '2.5rem'\r\n  },\r\n  dropdownItem: {\r\n    fontWeight: 600,\r\n    fontSize: '0.875rem',\r\n    height: '2.5rem'\r\n  },\r\n  dropdown: { height: '2.5rem' },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: '0.875rem',\r\n    height: '2.5rem',\r\n    lineHeight: '2.3125rem'\r\n  },\r\n  label: {\r\n    fontWeight: 600,\r\n    fontSize: '0.875rem'\r\n  }\r\n};\r\nexport const localSettingsContainer = mergeStyles({\r\n  width: '100%',\r\n  maxWidth: '18.75rem',\r\n  minWidth: '12.5rem',\r\n  maxHeight: '14.125rem',\r\n  marginTop: '2.125rem'\r\n});\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport { Stack, Dropdown, IDropdownOption } from '@fluentui/react';\r\nimport { VideoDeviceInfo, AudioDeviceInfo } from '@azure/communication-calling';\r\nimport { localSettingsContainer, dropDownStyles, micStackTokens, mainStackTokens } from './styles/LocalSettings.styles';\r\n\r\nexport interface LocalSettingsProps {\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n}\r\n\r\nexport default (props: LocalSettingsProps): JSX.Element => {\r\n  const defaultPlaceHolder = 'Select an option';\r\n  const cameraLabel = 'Camera';\r\n  const micLabel = 'Microphone';\r\n\r\n  const getDropDownList = (list: Array<VideoDeviceInfo | AudioDeviceInfo>): IDropdownOption[] => {\r\n    return list.map((item) => ({\r\n      val: item,\r\n      key: item.id,\r\n      text: item.name === '' ? item.deviceType : item.name\r\n    }));\r\n  };\r\n  return (\r\n    <Stack className={localSettingsContainer} tokens={mainStackTokens}>\r\n      <Dropdown\r\n        placeholder={defaultPlaceHolder}\r\n        label={cameraLabel}\r\n        options={getDropDownList(props.videoDeviceList)}\r\n        styles={dropDownStyles}\r\n        disabled={props.videoDeviceList.length === 0}\r\n        defaultSelectedKey={props.videoDeviceInfo ? props.videoDeviceInfo.id : ''}\r\n        onChange={(...args) => {\r\n          const index = args[2] ?? 0;\r\n          props.setVideoDeviceInfo(props.videoDeviceList[index]);\r\n        }}\r\n      />\r\n      <Stack tokens={micStackTokens}>\r\n        <Dropdown\r\n          placeholder={defaultPlaceHolder}\r\n          label={micLabel}\r\n          styles={dropDownStyles}\r\n          disabled={props.audioDeviceList.length === 0}\r\n          options={getDropDownList(props.audioDeviceList)}\r\n          defaultSelectedKey={props.audioDeviceInfo ? props.audioDeviceInfo.id : ''}\r\n          onChange={(...args) => {\r\n            const index = args[2] ?? 0;\r\n            props.setAudioDeviceInfo(props.audioDeviceList[index]);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport { AudioDeviceInfo, VideoDeviceInfo, RemoteVideoStream } from '@azure/communication-calling';\r\nimport {\r\n  CommunicationUser,\r\n  UnknownIdentifier,\r\n  CallingApplication,\r\n  PhoneNumber,\r\n  isCommunicationUser,\r\n  isCallingApplication,\r\n  isPhoneNumber\r\n} from '@azure/communication-common';\r\nimport preval from 'preval.macro';\r\n\r\nexport const utils = {\r\n  getAppServiceUrl: (): string => {\r\n    return window.location.origin;\r\n  },\r\n  getTokenForUser: async (userId: string): Promise<any> => {\r\n    const response = await fetch('/api/getUserToken?userId='.concat(encodeURIComponent(userId)));\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error('Invalid token response');\r\n  },\r\n  getGroupID: async (): Promise<any> => {\r\n    const response = await fetch('/api/getGroupId');\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error('Invalid token response');\r\n  },\r\n  isSelectedAudioDeviceInList(selected: AudioDeviceInfo, list: AudioDeviceInfo[]): boolean {\r\n    return list.filter((item) => item.name === selected.name).length > 0;\r\n  },\r\n  isSelectedVideoDeviceInList(selected: VideoDeviceInfo, list: VideoDeviceInfo[]): boolean {\r\n    return list.filter((item) => item.name === selected.name).length > 0;\r\n  },\r\n  isMobileSession() {\r\n    return window.navigator.userAgent.match(/(iPad|iPhone|iPod|Android|webOS|BlackBerry|Windows Phone)/g)\r\n      ? true\r\n      : false;\r\n  },\r\n  isSmallScreen() {\r\n    return window.innerWidth < 700 || window.innerHeight < 400;\r\n  },\r\n  getId: (identifier: CommunicationUser | CallingApplication | UnknownIdentifier | PhoneNumber): string => {\r\n    if (isCommunicationUser(identifier)) {\r\n      return identifier.communicationUserId;\r\n    } else if (isCallingApplication(identifier)) {\r\n      return identifier.callingApplicationId;\r\n    } else if (isPhoneNumber(identifier)) {\r\n      return identifier.phoneNumber;\r\n    } else {\r\n      return identifier.id;\r\n    }\r\n  },\r\n  getStreamId: (userId: string, stream: RemoteVideoStream): string => {\r\n    var id = (stream as any)['id'];\r\n    return `${userId}-${id}-${stream.type}`;\r\n  },\r\n  /*\r\n   * TODO:\r\n   *  Remove this method once the SDK improves error handling for unsupported browser.\r\n   */\r\n  isOnIphoneAndNotSafari(): boolean {\r\n    const userAgent = navigator.userAgent;\r\n    // Chrome uses 'CriOS' in user agent string and Firefox uses 'FxiOS' in user agent string.\r\n    if (userAgent.includes('iPhone') && (userAgent.includes('FxiOS') || userAgent.includes('CriOS'))) {\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  getBuildTime: () => {\r\n    const dateTimeStamp = preval`module.exports = new Date().toLocaleString();`;\r\n    return dateTimeStamp;\r\n  }\r\n};\r\n","import { CallEndReason, Call, RemoteParticipant, CallAgent } from '@azure/communication-calling';\r\n\r\nconst SET_CALL_AGENT = 'SET_CALL_AGENT';\r\nconst SET_GROUP = 'SET_GROUP';\r\nconst CALL_ADDED = 'CALL_ADDED';\r\nconst CALL_REMOVED = 'CALL_REMOVED';\r\nconst SET_CALL_STATE = 'SET_CALL_STATE';\r\nconst SET_PARTICIPANTS = 'SET_PARTICIPANTS';\r\n\r\ninterface SetCallAgentAction {\r\n  type: typeof SET_CALL_AGENT;\r\n  callAgent: CallAgent;\r\n}\r\ninterface SetGroupAction {\r\n  type: typeof SET_GROUP;\r\n  group: any;\r\n}\r\n\r\ninterface CallAddedAction {\r\n  type: typeof CALL_ADDED;\r\n  call: Call;\r\n}\r\n\r\ninterface CallRemovedAction {\r\n  type: typeof CALL_REMOVED;\r\n  call: Call | undefined;\r\n  incomingCallEndReason: CallEndReason | undefined;\r\n  groupCallEndReason: CallEndReason | undefined;\r\n}\r\n\r\ninterface SetCallStateAction {\r\n  type: typeof SET_CALL_STATE;\r\n  callState: string;\r\n}\r\n\r\ninterface SetParticipantsAction {\r\n  type: typeof SET_PARTICIPANTS;\r\n  remoteParticipants: RemoteParticipant[];\r\n}\r\n\r\nexport const setCallAgent = (callAgent: CallAgent): SetCallAgentAction => {\r\n  return {\r\n    type: SET_CALL_AGENT,\r\n    callAgent\r\n  };\r\n};\r\n\r\nexport const setGroup = (groupId: string): SetGroupAction => {\r\n  return {\r\n    type: SET_GROUP,\r\n    group: groupId\r\n  };\r\n};\r\n\r\nexport const callAdded = (addedCall: Call): CallAddedAction => {\r\n  return {\r\n    type: CALL_ADDED,\r\n    call: addedCall\r\n  };\r\n};\r\n\r\nexport const callRemoved = (removedCall: Call, group: string): CallRemovedAction => {\r\n  return {\r\n    type: CALL_REMOVED,\r\n    call: undefined,\r\n    incomingCallEndReason: removedCall.isIncoming ? removedCall.callEndReason : undefined,\r\n    groupCallEndReason: !removedCall.isIncoming && !!group ? removedCall.callEndReason : undefined\r\n  };\r\n};\r\n\r\nexport const setCallState = (callState: string): SetCallStateAction => {\r\n  return {\r\n    type: SET_CALL_STATE,\r\n    callState\r\n  };\r\n};\r\n\r\nexport const setParticipants = (participants: RemoteParticipant[]): SetParticipantsAction => {\r\n  return {\r\n    type: SET_PARTICIPANTS,\r\n    remoteParticipants: participants\r\n  };\r\n};\r\n\r\nexport { SET_CALL_AGENT, SET_GROUP, CALL_ADDED, CALL_REMOVED, SET_CALL_STATE, SET_PARTICIPANTS };\r\n\r\nexport type CallTypes =\r\n  | SetCallAgentAction\r\n  | SetParticipantsAction\r\n  | SetCallStateAction\r\n  | SetGroupAction\r\n  | CallAddedAction\r\n  | CallRemovedAction;\r\n","const SET_MIC = 'SET_MIC';\r\nconst SET_SHARE_SCREEN = 'SET_SHARE_SCREEN';\r\nconst RESET_CONTROLS = 'RESET_CONTROLS';\r\n\r\ninterface SetMicAction {\r\n  type: typeof SET_MIC;\r\n  mic: boolean;\r\n}\r\n\r\ninterface SetShareScreenAction {\r\n  type: typeof SET_SHARE_SCREEN;\r\n  shareScreen: boolean;\r\n}\r\n\r\ninterface ResetControlsAction {\r\n  type: typeof RESET_CONTROLS;\r\n}\r\n\r\nexport const setMic = (mic: boolean): SetMicAction => {\r\n  return {\r\n    type: SET_MIC,\r\n    mic\r\n  };\r\n};\r\n\r\nexport const setShareScreen = (shareScreen: boolean): SetShareScreenAction => {\r\n  return {\r\n    type: SET_SHARE_SCREEN,\r\n    shareScreen\r\n  };\r\n};\r\n\r\nexport const resetControls = (): ResetControlsAction => {\r\n  return {\r\n    type: RESET_CONTROLS\r\n  };\r\n};\r\n\r\nexport { SET_MIC, SET_SHARE_SCREEN, RESET_CONTROLS };\r\n\r\nexport type ControlTypes = SetMicAction | SetShareScreenAction | ResetControlsAction;\r\n","import { AudioDeviceInfo, VideoDeviceInfo, DeviceManager } from '@azure/communication-calling';\r\n\r\nconst SET_DEVICE_MANAGER = 'SET_DEVICE_MANAGER';\r\nconst SET_AUDIO_DEVICE_INFO = 'SET_AUDIO_DEVICE_INFO';\r\nconst SET_VIDEO_DEVICE_INFO = 'SET_VIDEO_DEVICE_INFO';\r\nconst SET_AUDIO_DEVICE_LIST = 'SET_AUDIO_DEVICE_LIST';\r\nconst SET_VIDEO_DEVICE_LIST = 'SET_VIDEO_DEVICE_LIST';\r\nconst SET_MICROPHONE_PERMISSION = 'SET_MICROPHONE_PERMISSION';\r\nconst SET_CAMERA_PERMISSION = 'SET_CAMERA_PERMISSION';\r\n\r\ninterface SetDeviceManagerAction {\r\n  type: typeof SET_DEVICE_MANAGER;\r\n  deviceManager: DeviceManager;\r\n}\r\n\r\ninterface SetMicrophonePermission {\r\n  type: typeof SET_MICROPHONE_PERMISSION;\r\n  microphonePermission: string;\r\n}\r\n\r\ninterface SetCameraPermission {\r\n  type: typeof SET_CAMERA_PERMISSION;\r\n  cameraPermission: string;\r\n}\r\n\r\ninterface SetAudioDeviceAction {\r\n  type: typeof SET_AUDIO_DEVICE_INFO;\r\n  audioDeviceInfo: AudioDeviceInfo | undefined;\r\n}\r\n\r\ninterface SetVideoDeviceAction {\r\n  type: typeof SET_VIDEO_DEVICE_INFO;\r\n  videoDeviceInfo: VideoDeviceInfo | undefined;\r\n}\r\n\r\ninterface SetAudioDeviceListAction {\r\n  type: typeof SET_AUDIO_DEVICE_LIST;\r\n  audioDeviceList: AudioDeviceInfo[];\r\n}\r\n\r\ninterface SetVideoDeviceListAction {\r\n  type: typeof SET_VIDEO_DEVICE_LIST;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n}\r\n\r\nexport const setDeviceManager = (deviceManager: DeviceManager): SetDeviceManagerAction => {\r\n  return {\r\n    type: SET_DEVICE_MANAGER,\r\n    deviceManager\r\n  };\r\n};\r\n\r\nexport const setMicrophonePermission = (microphonePermission: string): SetMicrophonePermission => {\r\n  return {\r\n    type: SET_MICROPHONE_PERMISSION,\r\n    microphonePermission\r\n  };\r\n};\r\n\r\nexport const setCameraPermission = (cameraPermission: string): SetCameraPermission => {\r\n  return {\r\n    type: SET_CAMERA_PERMISSION,\r\n    cameraPermission\r\n  };\r\n};\r\n\r\nexport const setAudioDeviceInfo = (audioDeviceInfo: AudioDeviceInfo | undefined): SetAudioDeviceAction => {\r\n  return {\r\n    type: SET_AUDIO_DEVICE_INFO,\r\n    audioDeviceInfo\r\n  };\r\n};\r\n\r\nexport const setVideoDeviceInfo = (videoDeviceInfo: VideoDeviceInfo | undefined): SetVideoDeviceAction => {\r\n  return {\r\n    type: SET_VIDEO_DEVICE_INFO,\r\n    videoDeviceInfo\r\n  };\r\n};\r\n\r\nexport const setAudioDeviceList = (audioDeviceList: AudioDeviceInfo[]): SetAudioDeviceListAction => {\r\n  return {\r\n    type: SET_AUDIO_DEVICE_LIST,\r\n    audioDeviceList\r\n  };\r\n};\r\n\r\nexport const setVideoDeviceList = (videoDeviceList: VideoDeviceInfo[]): SetVideoDeviceListAction => {\r\n  return {\r\n    type: SET_VIDEO_DEVICE_LIST,\r\n    videoDeviceList\r\n  };\r\n};\r\nexport {\r\n  SET_DEVICE_MANAGER,\r\n  SET_AUDIO_DEVICE_INFO,\r\n  SET_VIDEO_DEVICE_INFO,\r\n  SET_VIDEO_DEVICE_LIST,\r\n  SET_AUDIO_DEVICE_LIST,\r\n  SET_CAMERA_PERMISSION,\r\n  SET_MICROPHONE_PERMISSION\r\n};\r\n\r\nexport type DeviceTypes =\r\n  | SetDeviceManagerAction\r\n  | SetAudioDeviceAction\r\n  | SetVideoDeviceAction\r\n  | SetMicrophonePermission\r\n  | SetCameraPermission\r\n  | SetAudioDeviceListAction\r\n  | SetVideoDeviceListAction;\r\n","import { LocalVideoStream, RemoteParticipant, RemoteVideoStream } from '@azure/communication-calling';\r\n\r\nconst SET_LOCAL_PREVIEW_RENDERER = 'SET_LOCAL_PREVIEW_RENDERER';\r\nconst SET_LOCAL_VIDEO_STREAM = 'SET_LOCAL_STREAM';\r\nconst ADD_STREAM = 'ADD_STREAM';\r\nconst REMOVE_STREAM = 'REMOVE_STREAM';\r\nconst ADD_SCREENSHARE_STREAM = 'ADD_SCREENSHARE_STREAM';\r\nconst REMOVE_SCREENSHARE_STREAM = 'REMOVE_SCREENSHARE_STREAM';\r\nconst RESET_STREAMS = 'RESET_STREAMS';\r\n\r\ninterface SetLocalStreamAction {\r\n  type: typeof SET_LOCAL_VIDEO_STREAM;\r\n  localVideoStream: LocalVideoStream | undefined;\r\n}\r\n\r\ninterface AddScreenShareStreamAction {\r\n  type: typeof ADD_SCREENSHARE_STREAM;\r\n  stream: RemoteVideoStream;\r\n  user: RemoteParticipant;\r\n}\r\n\r\ninterface RemoveScreenShareStreamAction {\r\n  type: typeof REMOVE_SCREENSHARE_STREAM;\r\n  stream: RemoteVideoStream;\r\n  user: RemoteParticipant;\r\n}\r\n\r\ninterface ResetStreamsAction {\r\n  type: typeof RESET_STREAMS;\r\n}\r\n\r\nexport const setLocalVideoStream = (localVideoStream: LocalVideoStream | undefined): SetLocalStreamAction => {\r\n  return {\r\n    type: SET_LOCAL_VIDEO_STREAM,\r\n    localVideoStream\r\n  };\r\n};\r\n\r\nexport const addScreenShareStream = (\r\n  stream: RemoteVideoStream,\r\n  user: RemoteParticipant\r\n): AddScreenShareStreamAction => {\r\n  return {\r\n    type: ADD_SCREENSHARE_STREAM,\r\n    stream,\r\n    user\r\n  };\r\n};\r\n\r\nexport const removeScreenShareStream = (\r\n  stream: RemoteVideoStream,\r\n  user: RemoteParticipant\r\n): RemoveScreenShareStreamAction => {\r\n  return {\r\n    type: REMOVE_SCREENSHARE_STREAM,\r\n    stream,\r\n    user\r\n  };\r\n};\r\n\r\nexport const resetStreams = (): ResetStreamsAction => {\r\n  return {\r\n    type: RESET_STREAMS\r\n  };\r\n};\r\n\r\nexport {\r\n  SET_LOCAL_PREVIEW_RENDERER,\r\n  SET_LOCAL_VIDEO_STREAM,\r\n  ADD_STREAM,\r\n  REMOVE_STREAM,\r\n  ADD_SCREENSHARE_STREAM,\r\n  REMOVE_SCREENSHARE_STREAM,\r\n  RESET_STREAMS\r\n};\r\n\r\nexport type StreamTypes =\r\n  | SetLocalStreamAction\r\n  | AddScreenShareStreamAction\r\n  | RemoveScreenShareStreamAction\r\n  | ResetStreamsAction;\r\n","import {\r\n  AudioDeviceInfo,\r\n  Call,\r\n  CallClientOptions,\r\n  CommunicationError,\r\n  GroupCallContext,\r\n  JoinCallOptions,\r\n  DeviceManager,\r\n  DeviceAccess,\r\n  PermissionState,\r\n  RemoteParticipant,\r\n  VideoDeviceInfo,\r\n  CallAgent,\r\n  CallClient,\r\n  HangupCallOptions\r\n} from '@azure/communication-calling';\r\nimport { AzureCommunicationUserCredential, CommunicationUser, CallingApplication } from '@azure/communication-common';\r\nimport { Dispatch } from 'redux';\r\nimport { utils } from '../Utils/Utils';\r\nimport { callAdded, callRemoved, setCallState, setParticipants, setCallAgent } from './actions/calls';\r\nimport { setMic, setShareScreen, resetControls } from './actions/controls';\r\nimport {\r\n  setAudioDeviceInfo,\r\n  setAudioDeviceList,\r\n  setCameraPermission,\r\n  setMicrophonePermission,\r\n  setVideoDeviceInfo,\r\n  setVideoDeviceList,\r\n  setDeviceManager\r\n} from './actions/devices';\r\nimport { addScreenShareStream, resetStreams, removeScreenShareStream } from './actions/streams';\r\nimport { State } from './reducers';\r\n\r\nexport const setMicrophone = (mic: boolean) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n\r\n    if (state === undefined || state.calls.call === undefined) {\r\n      console.error('state or state.controls.mic is null');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!state.controls.mic) {\r\n        await state.calls.call.unmute();\r\n      } else {\r\n        await state.calls.call.mute();\r\n      }\r\n\r\n      dispatch(setMic(mic));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setShareUnshareScreen = (shareScreen: boolean) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n\r\n    if (state === undefined || state.calls.call === undefined) {\r\n      console.error('state or state.controls.shareScreen is null');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!state.controls.shareScreen) {\r\n        await state.calls.call.startScreenSharing();\r\n      } else {\r\n        await state.calls.call.stopScreenSharing();\r\n      }\r\n\r\n      dispatch(setShareScreen(shareScreen));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateDevices = () => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    let state = getState();\r\n    let deviceManager = state.devices.deviceManager;\r\n\r\n    if (deviceManager == null) {\r\n      console.error('no device manager available');\r\n      return;\r\n    }\r\n\r\n    const cameraList: VideoDeviceInfo[] = await deviceManager.getCameraList();\r\n\r\n    dispatch(setVideoDeviceList(cameraList));\r\n\r\n    const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophoneList();\r\n\r\n    dispatch(setAudioDeviceList(microphoneList));\r\n  };\r\n};\r\n\r\nexport const initCallClient = (userId: string, unsupportedStateHandler: () => void, endCallHandler: () => void) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    try {\r\n      const tokenResponse = await utils.getTokenForUser(userId);\r\n\r\n      const options: CallClientOptions = {};\r\n\r\n      const userToken = tokenResponse.value.token;\r\n\r\n      var callClient;\r\n\r\n      // check if chrome/ios\r\n      if (utils.isOnIphoneAndNotSafari()) {\r\n        unsupportedStateHandler();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        callClient = new CallClient(options);\r\n      } catch (e) {\r\n        unsupportedStateHandler();\r\n        return;\r\n      }\r\n\r\n      if (!callClient) {\r\n        return;\r\n      }\r\n\r\n      const tokenCredential = new AzureCommunicationUserCredential(userToken);\r\n      let callAgent: CallAgent = await callClient.createCallAgent(tokenCredential);\r\n\r\n      if (callAgent === undefined) {\r\n        return;\r\n      }\r\n\r\n      callAgent.updateDisplayName(userId);\r\n\r\n      let deviceManager: DeviceManager = await callClient.getDeviceManager();\r\n\r\n      dispatch(setDeviceManager(deviceManager));\r\n      dispatch(setCallAgent(callAgent));\r\n\r\n      subscribeToDeviceManager(deviceManager, dispatch, getState);\r\n\r\n      callAgent.on('callsUpdated', (e: { added: Call[]; removed: Call[] }): void => {\r\n        e.added.forEach((addedCall) => {\r\n          const state = getState();\r\n          if (state.calls.call && addedCall.isIncoming) {\r\n            addedCall.reject();\r\n            return;\r\n          }\r\n\r\n          dispatch(callAdded(addedCall));\r\n\r\n          addedCall.on('callStateChanged', (): void => {\r\n            dispatch(setCallState(addedCall.state));\r\n          });\r\n\r\n          addedCall.on('isScreenSharingOnChanged', (): void => {\r\n            dispatch(setShareScreen(addedCall.isScreenSharingOn));\r\n          });\r\n\r\n          addedCall.on('remoteParticipantsUpdated', (ev): void => {\r\n            ev.added.forEach((addedRemoteParticipant) => {\r\n              console.log('participantAdded', addedRemoteParticipant);\r\n              subscribeToParticipant(addedRemoteParticipant, addedCall, dispatch, getState);\r\n              dispatch(setParticipants([...addedCall.remoteParticipants.values()]));\r\n            });\r\n\r\n            // we don't use the actual value we are just going to reset the remoteParticipants based on the call\r\n            if (ev.removed.length > 0) {\r\n              console.log('participantRemoved');\r\n              dispatch(setParticipants([...addedCall.remoteParticipants.values()]));\r\n            }\r\n          });\r\n\r\n          const rp = [...addedCall.remoteParticipants.values()];\r\n          rp.forEach((v) => subscribeToParticipant(v, addedCall, dispatch, getState));\r\n          dispatch(setParticipants(rp));\r\n          dispatch(setCallState(addedCall.state));\r\n        });\r\n        e.removed.forEach((removedCall) => {\r\n          console.log('callRemoved', removedCall);\r\n          const state = getState();\r\n          if (state.calls.call && state.calls.call === removedCall) {\r\n            dispatch(callRemoved(removedCall, state.calls.group));\r\n            dispatch(resetControls());\r\n            dispatch(resetStreams());\r\n          }\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\n// what does the forEveryone parameter really mean?\r\nexport const endCall = async (call: Call, options: HangupCallOptions) => {\r\n  call.hangUp(options).catch((e: CommunicationError) => console.error(e));\r\n};\r\n\r\nexport const joinGroup = async (callAgent: CallAgent, context: GroupCallContext, callOptions: JoinCallOptions) => {\r\n  try {\r\n    await callAgent.join(context, callOptions);\r\n  } catch (e) {\r\n    console.log('Failed to join a call', e);\r\n    return;\r\n  }\r\n};\r\n\r\nexport const addParticipant = async (call: Call, user: CommunicationUser | CallingApplication) => {\r\n  call.addParticipant(user);\r\n};\r\n\r\nexport const removeParticipant = async (call: Call, user: CommunicationUser | CallingApplication) => {\r\n  call.removeParticipant(user).catch((e: CommunicationError) => console.error(e));\r\n};\r\n\r\nconst subscribeToParticipant = (\r\n  participant: RemoteParticipant,\r\n  call: Call,\r\n  dispatch: Dispatch,\r\n  getState: () => State\r\n) => {\r\n  const userId = utils.getId(participant.identifier);\r\n  participant.on('participantStateChanged', () => {\r\n    console.log('participant stateChanged', userId, participant.state);\r\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\r\n  });\r\n\r\n  participant.on('isSpeakingChanged', () => {\r\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\r\n  });\r\n\r\n  participant.on('videoStreamsUpdated', (e): void => {\r\n    e.added.forEach((addedStream) => {\r\n      if (addedStream.type === 'Video') {\r\n        return;\r\n      }\r\n      addedStream.on('availabilityChanged', () => {\r\n        if (addedStream.isAvailable) {\r\n          dispatch(addScreenShareStream(addedStream, participant));\r\n        } else {\r\n          dispatch(removeScreenShareStream(addedStream, participant));\r\n        }\r\n      });\r\n\r\n      if (addedStream.isAvailable) {\r\n        dispatch(addScreenShareStream(addedStream, participant));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst updateAudioDevices = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophoneList();\r\n  dispatch(setAudioDeviceList(microphoneList));\r\n\r\n  const state = getState();\r\n  if (state.devices.audioDeviceInfo === undefined && microphoneList.length > 0) {\r\n    dispatch(setAudioDeviceInfo(microphoneList[0]));\r\n    deviceManager.setMicrophone(microphoneList[0]);\r\n  } else if (\r\n    state.devices.audioDeviceInfo &&\r\n    !utils.isSelectedAudioDeviceInList(state.devices.audioDeviceInfo, microphoneList)\r\n  ) {\r\n    deviceManager.setMicrophone(state.devices.audioDeviceInfo);\r\n  }\r\n};\r\n\r\nconst updateVideoDevices = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  const cameraList: VideoDeviceInfo[] = deviceManager.getCameraList();\r\n  dispatch(setVideoDeviceList(cameraList));\r\n\r\n  const state = getState();\r\n  if (state.devices.videoDeviceInfo === undefined) {\r\n    dispatch(setVideoDeviceInfo(cameraList[0]));\r\n  } else if (\r\n    state.devices.videoDeviceInfo &&\r\n    !utils.isSelectedVideoDeviceInList(state.devices.videoDeviceInfo, cameraList)\r\n  ) {\r\n    dispatch(setVideoDeviceInfo(state.devices.videoDeviceInfo));\r\n  }\r\n};\r\n\r\nconst subscribeToDeviceManager = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  // listen for any new events\r\n  deviceManager.on('permissionStateChanged', async () => {\r\n    const cameraPermissionState: PermissionState = await deviceManager.getPermissionState('Camera');\r\n    dispatch(setCameraPermission(cameraPermissionState));\r\n\r\n    const microphonePermissionState: PermissionState = await deviceManager.getPermissionState('Microphone');\r\n    dispatch(setMicrophonePermission(microphonePermissionState));\r\n  });\r\n\r\n  deviceManager.on('videoDevicesUpdated', async () => {\r\n    updateVideoDevices(deviceManager, dispatch, getState);\r\n  });\r\n\r\n  deviceManager.on('audioDevicesUpdated', async () => {\r\n    updateAudioDevices(deviceManager, dispatch, getState);\r\n  });\r\n\r\n  deviceManager.askDevicePermission(true, true).then((e: DeviceAccess) => {\r\n    if (e.audio !== undefined) {\r\n      if (e.audio) {\r\n        dispatch(setMicrophonePermission('Granted'));\r\n\r\n        updateAudioDevices(deviceManager, dispatch, getState);\r\n      } else {\r\n        dispatch(setMicrophonePermission('Denied'));\r\n      }\r\n    }\r\n\r\n    if (e.video !== undefined) {\r\n      if (e.video) {\r\n        dispatch(setCameraPermission('Granted'));\r\n        updateVideoDevices(deviceManager, dispatch, getState);\r\n      } else {\r\n        dispatch(setCameraPermission('Denied'));\r\n      }\r\n    }\r\n  });\r\n};\r\n","import { mergeStyles, IStackTokens, IPersonaStyles, IButtonStyles } from '@fluentui/react';\r\n\r\nconst BLACK = '#000000';\r\nexport const itemStyles: Partial<IPersonaStyles> = {\r\n  root: {\r\n    minWidth: 0,\r\n    padding: '0 0.25rem',\r\n    alignSelf: 'stretch',\r\n    height: 'auto',\r\n    width: '12.5rem'\r\n  },\r\n  primaryText: {\r\n    color: BLACK\r\n  }\r\n};\r\nexport const overFlowButtonStyles: IButtonStyles = {\r\n  root: {\r\n    minWidth: 0,\r\n    padding: '0 0.25rem',\r\n    alignSelf: 'stretch',\r\n    height: 'auto'\r\n  }\r\n};\r\nexport const participantStackStyle = mergeStyles({\r\n  maxHeight: '21.875rem',\r\n  overflow: 'auto',\r\n  paddingLeft: '1.125rem',\r\n  paddingRight: '1.125rem'\r\n});\r\nexport const iconStyle = mergeStyles({\r\n  margin: '0.4375rem',\r\n  fontSize: '1rem'\r\n});\r\nexport const participantStackTokens: IStackTokens = {\r\n  childrenGap: '0.625rem',\r\n  padding: '0.625rem'\r\n};\r\n","import * as React from 'react';\r\nimport { Persona, PersonaSize, Stack, IconButton, PersonaPresence, FontIcon, OverflowSet } from '@fluentui/react';\r\nimport {\r\n  itemStyles,\r\n  participantStackStyle,\r\n  participantStackTokens,\r\n  overFlowButtonStyles,\r\n  iconStyle\r\n} from './styles/ParticipantStack.styles';\r\nimport { RemoteParticipant, Call } from '@azure/communication-calling';\r\nimport { CallingApplication, CommunicationUser } from '@azure/communication-common';\r\nimport { ParticipantStream } from 'core/reducers';\r\nimport { utils } from '../Utils/Utils';\r\n\r\nexport interface ParticipantStackProps {\r\n  userId: string;\r\n  call: Call;\r\n  callState: string;\r\n  screenShareStreams: ParticipantStream[];\r\n  remoteParticipants: RemoteParticipant[];\r\n  removeParticipant(user: CommunicationUser | CallingApplication | undefined): void;\r\n}\r\nexport interface CallParticipant {\r\n  key: string;\r\n  name: string;\r\n  participant: RemoteParticipant | undefined;\r\n  state: string;\r\n  isScreenSharing: boolean;\r\n}\r\n\r\nconst onRenderItem = (item: any) => (\r\n  <>\r\n    <Persona\r\n      text={item.name}\r\n      styles={itemStyles}\r\n      size={PersonaSize.size32}\r\n      presence={item.state === 'Connected' ? PersonaPresence.online : PersonaPresence.offline}\r\n    />\r\n    {item.isScreenSharing && <FontIcon className={iconStyle} iconName=\"ScreenCast\" />}\r\n  </>\r\n);\r\nconst onRenderOverflowButton = (overflowItems: any) => (\r\n  <IconButton\r\n    role=\"menuitem\"\r\n    title=\"More options\"\r\n    styles={overFlowButtonStyles}\r\n    menuIconProps={{ iconName: 'More' }}\r\n    menuProps={{ items: overflowItems }}\r\n  />\r\n);\r\nconst getParticipants = (\r\n  participants: CallParticipant[],\r\n  removeParticipant: (user: CommunicationUser | CallingApplication | undefined) => void\r\n) =>\r\n  participants.map((item, i) => (\r\n    <OverflowSet\r\n      key={i}\r\n      items={[item]}\r\n      role=\"menubar\"\r\n      vertical={false}\r\n      onRenderOverflowButton={onRenderOverflowButton}\r\n      onRenderItem={onRenderItem}\r\n    />\r\n  ));\r\nexport default (props: ParticipantStackProps): JSX.Element => {\r\n  const activeScreenShareStream = props.screenShareStreams && props.screenShareStreams.length === 1;\r\n  const screenShareStream = props.screenShareStreams[0];\r\n  const participants: CallParticipant[] = props.remoteParticipants.map((participant) => {\r\n    const isScreenSharing = activeScreenShareStream ? screenShareStream.user === participant : false;\r\n    return {\r\n      key: utils.getId(participant.identifier),\r\n      name: participant.displayName ?? utils.getId(participant.identifier),\r\n      participant: participant,\r\n      state: participant.state,\r\n      isScreenSharing: isScreenSharing\r\n    };\r\n  });\r\n  participants.push({\r\n    key: `${props.userId} (You)`,\r\n    name: `${props.userId} (You)`,\r\n    participant: undefined,\r\n    state: 'Connected',\r\n    isScreenSharing: activeScreenShareStream ? utils.getId(screenShareStream.user.identifier) === props.userId : false\r\n  });\r\n  return (\r\n    <Stack className={participantStackStyle} tokens={participantStackTokens}>\r\n      {getParticipants(participants, props.removeParticipant)}\r\n    </Stack>\r\n  );\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { removeParticipant } from '../core/sideEffects';\r\nimport { State } from '../core/reducers';\r\nimport ParticipantStack from '../components/ParticipantStack';\r\nimport { CommunicationUser, CallingApplication } from '@azure/communication-common';\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  userId: state.sdk.userId,\r\n  call: state.calls.call,\r\n  callState: state.calls.callState,\r\n  remoteParticipants: state.calls.remoteParticipants,\r\n  screenShareStreams: state.streams.screenShareStreams,\r\n  removeParticipant: (user: CommunicationUser | CallingApplication | undefined) => {\r\n    if (state.calls.call && user) {\r\n      removeParticipant(state.calls.call, user);\r\n    }\r\n  }\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps);\r\nexport default connector(ParticipantStack);\r\n","import { IStackStyles, mergeStyles, ITextFieldStyles, IStackTokens, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const fullHeightStyles: IStackStyles = {\r\n  root: {\r\n    height: '100%'\r\n  }\r\n};\r\nexport const paneFooterStyles: IStackStyles = {\r\n  root: {\r\n    marginBottom: '1.25rem'\r\n  }\r\n};\r\nexport const paneFooterTokens: IStackTokens = {\r\n  childrenGap: '0.3125rem'\r\n};\r\nexport const textFieldStyles: Partial<ITextFieldStyles> = {\r\n  field: {\r\n    color: palette.neutralSecondary,\r\n    padding: 0\r\n  },\r\n  root: {\r\n    marginLeft: '1rem',\r\n    marginRight: '1rem'\r\n  },\r\n  fieldGroup: {\r\n    border: 'none'\r\n  }\r\n};\r\n\r\nexport const paneHeaderStyle = mergeStyles({\r\n  height: '4.3125rem'\r\n});\r\n\r\nexport const paneHeaderTextStyle = mergeStyles({\r\n  fontSize: '1.375rem',\r\n  fontWeight: 600,\r\n  width: '69px',\r\n  float: 'left',\r\n  margin: '20px'\r\n});\r\nexport const footerMainTextStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '1rem',\r\n  marginLeft: '1rem',\r\n  marginRight: '1rem'\r\n});\r\nexport const copyLinkButtonStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '0.875rem', // 14px\r\n  height: '2.5rem',\r\n  marginLeft: '1rem',\r\n  marginRight: '1rem',\r\n  width: '90%'\r\n});\r\nexport const copyIconStyle = mergeStyles({\r\n  marginRight: '0.5em'\r\n});\r\nexport const settingsContainerStyle = mergeStyles({\r\n  marginLeft: '1.25rem',\r\n  width: '15.375rem'\r\n});\r\n","import { mergeStyles, IPivotStyles, getTheme } from '@fluentui/react';\r\n\r\nconst headerShadow = 'rgba(0, 0, 0, 0.133) 0px 1.6px 3.6px 0px, rgba(0, 0, 0, 0.11) 0px 0.3px 0.9px 0px';\r\nconst palette = getTheme().palette;\r\nexport const pivotItemStyles: Partial<IPivotStyles> = {\r\n  linkIsSelected: {\r\n    padding: 0,\r\n    marginRight: 0,\r\n    height: '100%',\r\n    color: palette.themePrimary,\r\n    selectors: {\r\n      ':hover': { color: palette.themePrimary }\r\n    }\r\n  },\r\n  link: { padding: 0, marginRight: 0, height: '3.75rem' },\r\n  root: { width: '5.25rem', height: '3.75rem', display: 'inline-block', verticalAlign: 'top' }\r\n};\r\nexport const pivotContainerStyle = mergeStyles({\r\n  display: 'inline-block'\r\n});\r\nexport const headerContainer = mergeStyles({\r\n  width: '100%',\r\n  height: '3.875rem',\r\n  padding: '0.0625rem 0',\r\n  boxShadow: headerShadow,\r\n  overflow: 'hidden',\r\n  flexDirection: 'row',\r\n  justifyContent: 'flex-end',\r\n  alignItems: 'center',\r\n  marginBottom: 2\r\n});\r\nexport const headerCenteredContainer = mergeStyles(headerContainer, {\r\n  justifyContent: 'center'\r\n});\r\n\r\nexport const separatorContainerStyle = mergeStyles({\r\n  display: 'inline-block',\r\n  padding: '0 1rem',\r\n  height: '1.875rem'\r\n});\r\nexport const pivotItemStyle = mergeStyles({\r\n  padding: '0 0.8125rem'\r\n});\r\nexport const separatorStyles = {\r\n  root: {\r\n    color: palette.neutralLight,\r\n    width: '0.0625rem' // 1px\r\n  }\r\n};\r\n","export class Constants {\r\n  static INCOMING = 'Incoming';\r\n  static RINGING = 'Ringing';\r\n  static CONNECTING = 'Connecting';\r\n  static CONNECTED = 'Connected';\r\n  static DEFAULT_IMG_WIDTH = 200;\r\n  static CROP_MEDIA = 'Crop';\r\n  static CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID = 'ConfigurationLocalVideoPreview';\r\n  static LOCAL_VIDEO_PREVIEW_ID = 'LocalVideoPreview';\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Header, { HeaderProps } from '../components/Header';\r\nimport { setMicrophone, setShareUnshareScreen, endCall } from '../core/sideEffects';\r\nimport { utils } from '../Utils/Utils';\r\nimport { Constants } from '../core/constants';\r\nimport { State } from '../core/reducers';\r\nimport { LocalVideoStream } from '@azure/communication-calling';\r\nimport { setLocalVideoStream } from '../core/actions/streams';\r\n\r\nconst mapStateToProps = (state: State, props: HeaderProps) => ({\r\n  actionable:\r\n    state.calls.callState === Constants.INCOMING ||\r\n    state.calls.callState === Constants.RINGING ||\r\n    state.calls.callState === Constants.CONNECTING ||\r\n    state.calls.callState === Constants.CONNECTED,\r\n  localVideoStream: state.streams.localVideoStream,\r\n  mic: state.controls.mic,\r\n  call: state.calls.call,\r\n  shareScreen: state.controls.shareScreen,\r\n  endCall: () => {\r\n    state.calls.call && endCall(state.calls.call, { forEveryone: false });\r\n    props.endCallHandler();\r\n  },\r\n  videoDeviceInfo: state.devices.videoDeviceInfo,\r\n  screenWidth: props.screenWidth,\r\n  screenShareStreams: state.streams.screenShareStreams,\r\n  localVideoRendererIsBusy: state.streams.localVideoRendererIsBusy,\r\n  cameraPermission: state.devices.cameraPermission,\r\n  microphonePermission: state.devices.microphonePermission\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream)),\r\n  setMic: (mic: boolean) => dispatch(setMicrophone(mic)),\r\n  setScreenShare: (screenShare: boolean) => dispatch(setShareUnshareScreen(screenShare)),\r\n  // Only support Desktop -- Chrome | Edge (Chromium) | Safari\r\n  isLocalScreenShareSupportedInBrowser: () => {\r\n    return (\r\n      !utils.isMobileSession() &&\r\n      (/chrome/i.test(navigator.userAgent.toLowerCase()) || /safari/i.test(navigator.userAgent.toLowerCase()))\r\n    );\r\n  }\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connector(Header);\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React, { useEffect } from 'react';\r\nimport { Stack, Toggle, Image, ImageFit } from '@fluentui/react';\r\nimport { MicIcon, CallVideoIcon } from '@fluentui/react-icons-northstar';\r\nimport { Constants } from '../core/constants';\r\nimport {\r\n  RendererView,\r\n  VideoDeviceInfo,\r\n  AudioDeviceInfo,\r\n  LocalVideoStream,\r\n  Renderer\r\n} from '@azure/communication-calling';\r\nimport staticMediaSVG from '../assets/staticmedia.svg';\r\nimport {\r\n  toggleStyle,\r\n  imgStyles,\r\n  toggleButtonsBarToken,\r\n  localPreviewContainerStyle,\r\n  toggleButtonsBarStyle,\r\n  localPreviewStyle\r\n} from './styles/LocalPreview.styles';\r\n\r\nexport interface LocalPreviewProps {\r\n  setMic(mic: boolean): void;\r\n  setLocalVideoStream(device: LocalVideoStream | undefined): void;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  localVideoStream: LocalVideoStream;\r\n}\r\n\r\nvar rendererView: RendererView;\r\n\r\nexport default (props: LocalPreviewProps): JSX.Element => {\r\n  const imageProps = {\r\n    src: staticMediaSVG.toString(),\r\n    imageFit: ImageFit.cover,\r\n    maximizeFrame: true\r\n  };\r\n\r\n  const handleLocalVideoOnOff = (_ev: React.MouseEvent<HTMLElement>, checked = false): void => {\r\n    var stream = new LocalVideoStream(props.videoDeviceInfo);\r\n    props.setLocalVideoStream(checked ? stream : undefined);\r\n  };\r\n  const handleLocalMicOnOff = (_ev: React.MouseEvent<HTMLElement>, checked = false): void => {\r\n    props.setMic(checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (props.localVideoStream) {\r\n        var renderer: Renderer = new Renderer(props.localVideoStream);\r\n        rendererView = await renderer.createView({ scalingMode: 'Crop' });\r\n\r\n        var container = document.getElementById(Constants.CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID);\r\n\r\n        if (container && container.childElementCount === 0) {\r\n          container.appendChild(rendererView.target);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      if (rendererView) {\r\n        rendererView.dispose();\r\n      }\r\n    };\r\n  }, [props.localVideoStream]);\r\n  return (\r\n    <Stack className={localPreviewContainerStyle}>\r\n      <Stack\r\n        horizontalAlign=\"center\"\r\n        verticalAlign=\"center\"\r\n        id={Constants.CONFIGURATION_LOCAL_VIDEO_PREVIEW_ID}\r\n        className={localPreviewStyle}\r\n      >\r\n        {!props.localVideoStream && <Image styles={imgStyles} {...imageProps} />}\r\n      </Stack>\r\n      <Stack\r\n        horizontal\r\n        horizontalAlign=\"center\"\r\n        verticalAlign=\"center\"\r\n        tokens={toggleButtonsBarToken}\r\n        className={toggleButtonsBarStyle}\r\n      >\r\n        <CallVideoIcon size=\"medium\" />\r\n        <Toggle\r\n          onKeyDownCapture={(e) => {\r\n            // if (e.keyCode === 13 && props.localVideoRendererIsBusy) {\r\n            //     e.preventDefault();\r\n            // }\r\n          }}\r\n          styles={toggleStyle}\r\n          disabled={!props.videoDeviceInfo}\r\n          onChange={handleLocalVideoOnOff}\r\n        />\r\n        <MicIcon size=\"medium\" />\r\n        <Toggle styles={toggleStyle} disabled={!props.audioDeviceInfo} onChange={handleLocalMicOnOff} />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React, { useEffect } from 'react';\r\nimport { Separator, Pivot, PivotItem, Stack } from '@fluentui/react';\r\nimport { Call, LocalVideoStream, VideoDeviceInfo } from '@azure/communication-calling';\r\nimport MediaControls from './MediaControls';\r\nimport { CommandPanelTypes } from './CommandPanel';\r\nimport { UserFriendsIcon, SettingsIcon } from '@fluentui/react-icons-northstar';\r\nimport {\r\n  headerContainer,\r\n  pivotItemStyles,\r\n  separatorContainerStyle,\r\n  separatorStyles,\r\n  pivotItemStyle,\r\n  headerCenteredContainer\r\n} from './styles/Header.styles';\r\nimport { ParticipantStream } from 'core/reducers';\r\n\r\nexport interface HeaderProps {\r\n  selectedPane: CommandPanelTypes;\r\n  setSelectedPane: any;\r\n  endCallHandler(): void;\r\n  actionable: boolean;\r\n  localVideo: boolean;\r\n  mic: boolean;\r\n  shareScreen: boolean;\r\n  call: Call;\r\n  endCall(): void;\r\n  screenShareStreams: ParticipantStream[];\r\n  activeScreenShareStream: ParticipantStream | undefined;\r\n  localVideoRendererIsBusy: boolean;\r\n  cameraPermission: string;\r\n  microphonePermission: string;\r\n  screenWidth: number;\r\n  setMic(mic: boolean): void;\r\n  setLocalVideoStream(localVideoStream: LocalVideoStream | undefined): void;\r\n  setScreenShare(screenShare: boolean): void;\r\n  isLocalScreenShareSupportedInBrowser(): boolean;\r\n  localVideoStream: LocalVideoStream | undefined;\r\n  videoDeviceInfo: VideoDeviceInfo | undefined;\r\n}\r\n\r\nexport default (props: HeaderProps): JSX.Element => {\r\n  const togglePeople = (selectedPane: string, setSelectedPane: (pane: string) => void) => {\r\n    return selectedPane !== CommandPanelTypes.People\r\n      ? setSelectedPane(CommandPanelTypes.People)\r\n      : setSelectedPane(CommandPanelTypes.None);\r\n  };\r\n\r\n  const toggleOptions = (selectedPane: string, setSelectedPane: (pane: string) => void) => {\r\n    return selectedPane !== CommandPanelTypes.Settings\r\n      ? setSelectedPane(CommandPanelTypes.Settings)\r\n      : setSelectedPane(CommandPanelTypes.None);\r\n  };\r\n\r\n  const handleLocalVideoOnOff = () => {\r\n    if (props.localVideoStream) {\r\n      props.call.stopVideo(props.localVideoStream);\r\n      props.setLocalVideoStream(undefined);\r\n    } else {\r\n      if (props.videoDeviceInfo) {\r\n        var localVideoStream = new LocalVideoStream(props.videoDeviceInfo);\r\n        props.setLocalVideoStream(localVideoStream);\r\n        props.call.startVideo(localVideoStream);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMuteOnOff = () => {\r\n    props.setMic(!props.mic);\r\n  };\r\n\r\n  const handleScreenSharingOnOff = () => {\r\n    props.setScreenShare(!props.shareScreen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.call && props.call.localVideoStreams.length === 0 && props.localVideoStream) {\r\n      props.call.startVideo(props.localVideoStream);\r\n    }\r\n  }, [props.call, props.localVideoStream]);\r\n\r\n  return (\r\n    <Stack id=\"header\" className={props.screenWidth > 360 ? headerContainer : headerCenteredContainer}>\r\n      <Pivot\r\n        onKeyDownCapture={(e) => {\r\n          if ((e.target as HTMLElement).id === CommandPanelTypes.People && e.keyCode === 39) e.preventDefault();\r\n        }}\r\n        getTabId={(itemKey: string) => itemKey}\r\n        onLinkClick={(item) => {\r\n          if (!item) return;\r\n          if (item.props.itemKey === CommandPanelTypes.Settings)\r\n            toggleOptions(props.selectedPane, props.setSelectedPane);\r\n          if (item.props.itemKey === CommandPanelTypes.People) togglePeople(props.selectedPane, props.setSelectedPane);\r\n        }}\r\n        styles={pivotItemStyles}\r\n        initialSelectedKey={CommandPanelTypes.None}\r\n        selectedKey={props.selectedPane}\r\n      >\r\n        <PivotItem\r\n          itemKey={CommandPanelTypes.Settings}\r\n          onRenderItemLink={() => (\r\n            <SettingsIcon\r\n              outline={props.selectedPane === CommandPanelTypes.Settings ? false : true}\r\n              size=\"medium\"\r\n              className={pivotItemStyle}\r\n            />\r\n          )}\r\n        />\r\n        <PivotItem\r\n          itemKey={CommandPanelTypes.People}\r\n          onRenderItemLink={() => (\r\n            <UserFriendsIcon\r\n              outline={props.selectedPane === CommandPanelTypes.People ? false : true}\r\n              size=\"medium\"\r\n              className={pivotItemStyle}\r\n            />\r\n          )}\r\n        />\r\n        <PivotItem itemKey={CommandPanelTypes.None} />\r\n      </Pivot>\r\n      {props.screenWidth > 360 && (\r\n        <div className={separatorContainerStyle}>\r\n          <Separator styles={separatorStyles} vertical={true} />\r\n        </div>\r\n      )}\r\n      <MediaControls\r\n        micActive={props.mic}\r\n        onMicChange={handleMuteOnOff}\r\n        cameraActive={props.localVideoStream !== undefined}\r\n        onCameraChange={handleLocalVideoOnOff}\r\n        screenShareActive={props.shareScreen}\r\n        activeScreenShareStream={props.screenShareStreams[0] ?? undefined}\r\n        onScreenShareChange={handleScreenSharingOnOff}\r\n        onEndCallClick={() => {\r\n          if (props.localVideo) handleLocalVideoOnOff();\r\n          props.endCall();\r\n        }}\r\n        cameraPermission={props.cameraPermission}\r\n        microphonePermission={props.microphonePermission}\r\n        localVideoRendererIsBusy={props.localVideoRendererIsBusy}\r\n        compressedMode={props.screenWidth <= 360}\r\n        isLocalScreenShareSupportedInBrowser={props.isLocalScreenShareSupportedInBrowser}\r\n      />\r\n    </Stack>\r\n  );\r\n};\r\n","import { mergeStyles, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const mediaGalleryStyle = mergeStyles({\r\n  padding: '0.4375rem',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  border: 0,\r\n  borderRight: '1px solid rgba(0,0,0,0.05)',\r\n  borderBottom: '1px solid rgba(0,0,0,0.05)'\r\n});\r\nexport const mediaGalleryGridStyle = mergeStyles({\r\n  height: '100%',\r\n  background: palette.neutralLighterAlt,\r\n  display: 'grid'\r\n});\r\n","import { mergeStyles, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const videoHint = mergeStyles({\r\n  backgroundColor: palette.neutralSecondary,\r\n  bottom: '5%',\r\n  height: '1.75rem',\r\n  boxShadow: '0 0 1px 0 rgba(0,0,0,.16)',\r\n  color: palette.neutralLighter,\r\n  fontSize: '1.25rem',\r\n  lineHeight: '1.0625rem',\r\n  textAlign: 'left',\r\n  left: '2%',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  padding: '0.25rem',\r\n  whiteSpace: 'nowrap',\r\n  maxWidth: '40%',\r\n  borderRadius: 4\r\n});\r\nexport const mediaContainer = mergeStyles({\r\n  position: 'relative',\r\n  height: '100%',\r\n  width: '100%',\r\n  background: 'transparent'\r\n});\r\nexport const localVideoContainerStyle = mergeStyles(mediaContainer, {\r\n  width: '100%',\r\n  height: '100%',\r\n  transform: 'rotateY(180deg)'\r\n});\r\n","// © Microsoft Corporation. All rights reserved.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Image, ImageFit, Label } from '@fluentui/react';\r\nimport { LocalVideoStream, Renderer, RendererView } from '@azure/communication-calling';\r\nimport { videoHint, mediaContainer, localVideoContainerStyle } from './styles/StreamMedia.styles';\r\nimport { Constants } from '../core/constants';\r\nimport staticMediaSVG from '../assets/staticmedia.svg';\r\n\r\nexport interface LocalStreamMediaProps {\r\n  label: string;\r\n  stream: LocalVideoStream;\r\n}\r\n\r\nexport default (props: LocalStreamMediaProps): JSX.Element => {\r\n  let rendererView: RendererView;\r\n\r\n  const [available, setAvailable] = useState(false);\r\n\r\n  const imageProps = {\r\n    src: staticMediaSVG.toString(),\r\n    imageFit: ImageFit.contain,\r\n    maximizeFrame: true\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (props.stream) {\r\n        var renderer: Renderer = new Renderer(props.stream);\r\n        rendererView = await renderer.createView({ scalingMode: 'Crop' });\r\n\r\n        var container = document.getElementById(Constants.LOCAL_VIDEO_PREVIEW_ID);\r\n\r\n        if (container && container.childElementCount === 0) {\r\n          container.appendChild(rendererView.target);\r\n          setAvailable(true);\r\n        }\r\n      } else {\r\n        if (rendererView) {\r\n          rendererView.dispose();\r\n          setAvailable(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      if (rendererView) {\r\n        rendererView.dispose();\r\n        setAvailable(false);\r\n      }\r\n    };\r\n  }, [props.stream]);\r\n\r\n  return (\r\n    <div className={mediaContainer}>\r\n      <div\r\n        style={{ display: available ? 'block' : 'none' }}\r\n        className={localVideoContainerStyle}\r\n        id={Constants.LOCAL_VIDEO_PREVIEW_ID}\r\n      />\r\n      <Image style={{ display: available ? 'none' : 'block' }} {...imageProps} />\r\n      <Label className={videoHint}>{props.label}</Label>\r\n    </div>\r\n  );\r\n};\r\n","// © Microsoft Corporation. All rights reserved.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Label } from '@fluentui/react';\r\nimport { RemoteVideoStream, Renderer, RendererView } from '@azure/communication-calling';\r\nimport { videoHint, mediaContainer } from './styles/StreamMedia.styles';\r\nimport { utils } from 'Utils/Utils';\r\nimport staticMediaSVG from '../assets/staticmedia.svg';\r\nimport { Image, ImageFit } from '@fluentui/react';\r\n\r\nexport interface RemoteStreamMediaProps {\r\n  label: string;\r\n  stream: RemoteVideoStream | undefined;\r\n}\r\n\r\nexport default (props: RemoteStreamMediaProps): JSX.Element => {\r\n  let rendererView: RendererView;\r\n\r\n  let streamId = props.stream ? utils.getStreamId(props.label, props.stream) : `${props.label} - no stream`;\r\n\r\n  const [available, setAvailable] = useState(false);\r\n\r\n  const imageProps = {\r\n    src: staticMediaSVG.toString(),\r\n    imageFit: ImageFit.contain,\r\n    maximizeFrame: true\r\n  };\r\n\r\n  const stream = props.stream;\r\n\r\n  const renderStream = async () => {\r\n    var container = document.getElementById(streamId);\r\n\r\n    if (container && props.stream && props.stream.isAvailable) {\r\n      setAvailable(true);\r\n\r\n      var renderer: Renderer = new Renderer(props.stream);\r\n      rendererView = await renderer.createView({ scalingMode: 'Crop' });\r\n\r\n      // we need to check if the stream is available still and if the id is what we expect\r\n      if (container && container.childElementCount === 0) {\r\n        container.appendChild(rendererView.target);\r\n      }\r\n    } else {\r\n      setAvailable(false);\r\n\r\n      if (rendererView) {\r\n        rendererView.dispose();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!stream) {\r\n      return;\r\n    }\r\n\r\n    stream.on('availabilityChanged', renderStream);\r\n\r\n    if (stream.isAvailable) {\r\n      renderStream();\r\n    }\r\n  }, [stream, renderStream]);\r\n\r\n  return (\r\n    <div className={mediaContainer}>\r\n      <div style={{ display: available ? 'block' : 'none' }} className={mediaContainer} id={streamId} />\r\n      <Image style={{ display: available ? 'none' : 'block' }} {...imageProps} />\r\n      <Label className={videoHint}>{props.label}</Label>\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from 'react-redux';\r\nimport MediaGallery from '../components/MediaGallery';\r\nimport { State } from '../core/reducers';\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  userId: state.sdk.userId,\r\n  remoteParticipants: state.calls.remoteParticipants,\r\n  localVideoStream: state.streams.localVideoStream\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps);\r\nexport default connector(MediaGallery);\r\n","import React, { useState } from 'react';\r\nimport { mediaGalleryGridStyle, mediaGalleryStyle } from './styles/MediaGallery.styles';\r\nimport { RemoteParticipant, LocalVideoStream } from '@azure/communication-calling';\r\nimport { utils } from '../Utils/Utils';\r\nimport LocalStreamMedia from './LocalStreamMedia';\r\nimport RemoteStreamMedia from './RemoteStreamMedia';\r\n\r\nexport interface MediaGalleryProps {\r\n  userId: string;\r\n  remoteParticipants: RemoteParticipant[];\r\n  localVideoStream: LocalVideoStream;\r\n}\r\n\r\nexport default (props: MediaGalleryProps): JSX.Element => {\r\n  const [gridCol, setGridCol] = useState(1);\r\n  const [gridRow, setGridRow] = useState(1);\r\n\r\n  const calculateNumberOfRows = React.useCallback(\r\n    (participants, gridCol) => Math.ceil((participants.length + 1) / gridCol),\r\n    []\r\n  );\r\n  const calculateNumberOfColumns = React.useCallback(\r\n    (participants) => (participants && participants.length > 0 ? Math.ceil(Math.sqrt(participants.length + 1)) : 1),\r\n    []\r\n  );\r\n  const getMediaGalleryTilesForParticipants = (participants: RemoteParticipant[], userId: string) => {\r\n    // create a RemoteStreamMedia component for every remote participant\r\n    const remoteParticipantsMediaGalleryItems = participants.map((participant) => (\r\n      <div className={mediaGalleryStyle}>\r\n        <RemoteStreamMedia\r\n          key={utils.getId(participant.identifier)}\r\n          stream={participant.videoStreams[0]}\r\n          label={participant.displayName ?? utils.getId(participant.identifier)}\r\n        />\r\n      </div>\r\n    ));\r\n\r\n    // create a LocalStreamMedia component for the local participant\r\n    const localParticipantMediaGalleryItem = (\r\n      <div key={userId} className={mediaGalleryStyle}>\r\n        <LocalStreamMedia label={userId} stream={props.localVideoStream} />\r\n      </div>\r\n    );\r\n\r\n    // add the LocalStreamMedia at the beginning of the list\r\n    remoteParticipantsMediaGalleryItems.unshift(localParticipantMediaGalleryItem);\r\n\r\n    return remoteParticipantsMediaGalleryItems;\r\n  };\r\n\r\n  const numberOfColumns = calculateNumberOfColumns(props.remoteParticipants);\r\n  if (numberOfColumns !== gridCol) setGridCol(numberOfColumns);\r\n  const numberOfRows = calculateNumberOfRows(props.remoteParticipants, gridCol);\r\n  if (numberOfRows !== gridRow) setGridRow(numberOfRows);\r\n\r\n  return (\r\n    <div\r\n      className={mediaGalleryGridStyle}\r\n      style={{\r\n        gridTemplateRows: `repeat(${gridRow}, minmax(0, 1fr))`,\r\n        gridTemplateColumns: `repeat(${gridCol}, 1fr)`\r\n      }}\r\n    >\r\n      {getMediaGalleryTilesForParticipants(props.remoteParticipants, props.userId)}\r\n    </div>\r\n  );\r\n};\r\n","import { mergeStyles, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const fullScreenStyle = mergeStyles({\r\n  padding: '0.5em',\r\n  borderRight: '1px solid rgba(0,0,0,0.05)',\r\n  height: '100%',\r\n  width: '100%',\r\n  background: palette.neutralLighterAlt\r\n});\r\n\r\nexport const hiddenFullScreenStyle = mergeStyles({\r\n  display: 'none',\r\n  borderRight: '1px solid rgba(0,0,0,0.05)',\r\n  height: '100%',\r\n  width: '100%',\r\n  background: palette.neutralLighterAlt\r\n});\r\n\r\nexport const loadingStyle = mergeStyles({\r\n  height: '100%',\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ParticipantStream } from '../core/reducers';\r\nimport { hiddenFullScreenStyle, fullScreenStyle, loadingStyle } from './styles/MediaFullScreen.styles';\r\nimport { RemoteVideoStream, Renderer, RendererView } from '@azure/communication-calling';\r\nimport { Spinner, SpinnerSize } from '@fluentui/react';\r\nimport { utils } from 'Utils/Utils';\r\n\r\nexport interface MediaFullScreenProps {\r\n  activeScreenShareStream: ParticipantStream;\r\n}\r\n\r\nexport default (props: MediaFullScreenProps): JSX.Element => {\r\n  const [loading, setLoading] = useState(true);\r\n  const fullScreenStreamMediaId = 'fullScreenStreamMediaId';\r\n  let rendererView: RendererView;\r\n\r\n  /**\r\n   * Start stream after DOM has rendered\r\n   */\r\n\r\n  const activeScreenShareStream = props.activeScreenShareStream;\r\n\r\n  const renderStream = async () => {\r\n    if (activeScreenShareStream && activeScreenShareStream.stream) {\r\n      let stream: RemoteVideoStream = activeScreenShareStream.stream;\r\n      var renderer: Renderer = new Renderer(stream);\r\n      rendererView = await renderer.createView({ scalingMode: 'Fit' });\r\n\r\n      let container = document.getElementById(fullScreenStreamMediaId);\r\n      if (container && container.childElementCount === 0) {\r\n        setLoading(false);\r\n        container.appendChild(rendererView.target);\r\n      }\r\n    } else {\r\n      if (rendererView) {\r\n        rendererView.dispose();\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    renderStream();\r\n  }, [activeScreenShareStream, renderStream]);\r\n\r\n  const displayName =\r\n    props.activeScreenShareStream.user.displayName ?? utils.getId(props.activeScreenShareStream.user.identifier);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className={loadingStyle}>\r\n          <Spinner label={`Loading ${displayName}'s screen`} size={SpinnerSize.xSmall} />\r\n        </div>\r\n      )}\r\n      <div id={fullScreenStreamMediaId} className={loading ? hiddenFullScreenStyle : fullScreenStyle}></div>\r\n    </>\r\n  );\r\n};\r\n","import { IStackItemStyles, IStackStyles, getTheme, mergeStyles } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const headerStyles: IStackItemStyles = {\r\n  root: {\r\n    width: '100%'\r\n  }\r\n};\r\nexport const containerStyles: IStackStyles = {\r\n  root: {\r\n    height: '100%',\r\n    minHeight: '9.375rem',\r\n    width: '100%'\r\n  }\r\n};\r\nexport const paneStyles: IStackItemStyles = {\r\n  root: {\r\n    width: '17.875rem'\r\n  }\r\n};\r\nexport const hiddenContainerClassName: IStackItemStyles = {\r\n  root: {\r\n    border: `solid 1px ${palette.neutralLighterAlt}`,\r\n    height: '100%',\r\n    display: 'none'\r\n  }\r\n};\r\nexport const activeContainerClassName: IStackItemStyles = {\r\n  root: {\r\n    border: `solid 1px ${palette.neutralLighterAlt}`,\r\n    height: 'calc(100% - 3px)',\r\n    display: 'initial'\r\n  }\r\n};\r\n\r\nexport const loadingStyle = mergeStyles({\r\n  height: '100%',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n});\r\n","import { connect } from 'react-redux';\r\nimport GroupCall, { GroupCallProps } from '../components/GroupCall';\r\nimport { joinGroup, setMicrophone } from '../core/sideEffects';\r\nimport { setLocalVideoStream } from '../core/actions/streams';\r\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\r\nimport { AudioDeviceInfo, VideoDeviceInfo, LocalVideoStream } from '@azure/communication-calling';\r\nimport { State } from '../core/reducers';\r\n\r\nconst mapStateToProps = (state: State, props: GroupCallProps) => ({\r\n  userId: state.sdk.userId || props.userId,\r\n  callAgent: state.calls.callAgent,\r\n  group: state.calls.group,\r\n  screenWidth: props.screenWidth,\r\n  call: state.calls.call,\r\n  shareScreen: state.controls.shareScreen,\r\n  mic: state.controls.mic,\r\n  groupCallEndReason: state.calls.groupCallEndReason,\r\n  isGroup: () => state.calls.call && !state.calls.call.isIncoming && !!state.calls.group,\r\n  joinGroup: () => {\r\n    state.calls.callAgent &&\r\n      joinGroup(\r\n        state.calls.callAgent,\r\n        {\r\n          groupId: state.calls.group\r\n        },\r\n        {\r\n          audioOptions: { muted: !state.controls.mic }\r\n        }\r\n      );\r\n  },\r\n  remoteParticipants: state.calls.remoteParticipants,\r\n  streams: state.streams.streams,\r\n  callState: state.calls.callState,\r\n  localVideo: state.controls.localVideo,\r\n  localVideoStream: state.streams.localVideoStream,\r\n  screenShareStreams: state.streams.screenShareStreams,\r\n  videoDeviceInfo: state.devices.videoDeviceInfo,\r\n  audioDeviceInfo: state.devices.audioDeviceInfo,\r\n  videoDeviceList: state.devices.videoDeviceList,\r\n  audioDeviceList: state.devices.audioDeviceList,\r\n  cameraPermission: state.devices.cameraPermission,\r\n  microphonePermission: state.devices.microphonePermission\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  mute: () => dispatch(setMicrophone(false)),\r\n  setAudioDeviceInfo: (deviceInfo: AudioDeviceInfo) => dispatch(setAudioDeviceInfo(deviceInfo)),\r\n  setVideoDeviceInfo: (deviceInfo: VideoDeviceInfo) => {\r\n    dispatch(setVideoDeviceInfo(deviceInfo));\r\n  },\r\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream))\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connector(GroupCall);\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Label, Stack } from '@fluentui/react';\r\nimport Header from '../containers/Header';\r\nimport MediaGallery from '../containers/MediaGallery';\r\nimport MediaFullScreen from './MediaFullScreen';\r\nimport CommandPanel, { CommandPanelTypes } from './CommandPanel';\r\nimport { Constants } from '../core/constants';\r\nimport {\r\n  headerStyles,\r\n  containerStyles,\r\n  paneStyles,\r\n  hiddenContainerClassName,\r\n  activeContainerClassName,\r\n  loadingStyle\r\n} from './styles/GroupCall.styles';\r\nimport {\r\n  Call,\r\n  LocalVideoStream,\r\n  AudioDeviceInfo,\r\n  VideoDeviceInfo,\r\n  RemoteParticipant,\r\n  CallAgent\r\n} from '@azure/communication-calling';\r\nimport { ParticipantStream } from 'core/reducers/index.js';\r\n\r\nexport interface GroupCallProps {\r\n  userId: string;\r\n  groupId: string;\r\n  call: Call;\r\n  callAgent: CallAgent;\r\n  mic: boolean;\r\n  remoteParticipants: RemoteParticipant[];\r\n  streams: ParticipantStream[];\r\n  callState: string;\r\n  localVideo: boolean;\r\n  localVideoStream: LocalVideoStream;\r\n  screenShareStreams: ParticipantStream[];\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  screenWidth: number;\r\n  shareScreen: boolean;\r\n  setAudioDeviceInfo(deviceInfo: AudioDeviceInfo): void;\r\n  setVideoDeviceInfo(deviceInfo: VideoDeviceInfo): void;\r\n  setLocalVideoStream(stream: LocalVideoStream | undefined): void;\r\n  mute(): void;\r\n  isGroup(): void;\r\n  joinGroup(): void;\r\n  endCallHandler(): void;\r\n}\r\n\r\nexport default (props: GroupCallProps): JSX.Element => {\r\n  const [selectedPane, setSelectedPane] = useState(CommandPanelTypes.None);\r\n  const activeScreenShare = props.screenShareStreams && props.screenShareStreams.length === 1;\r\n\r\n  const { callAgent, call, groupId, joinGroup } = props;\r\n\r\n  useEffect(() => {\r\n    if (callAgent && !call) {\r\n      joinGroup();\r\n      document.title = `${groupId} group call sample`;\r\n    }\r\n  }, [callAgent, call, groupId, joinGroup]);\r\n\r\n  return (\r\n    <Stack horizontalAlign=\"center\" verticalAlign=\"center\" styles={containerStyles}>\r\n      <Stack.Item styles={headerStyles}>\r\n        <Header\r\n          selectedPane={selectedPane}\r\n          setSelectedPane={setSelectedPane}\r\n          endCallHandler={props.endCallHandler}\r\n          screenWidth={props.screenWidth}\r\n        />\r\n      </Stack.Item>\r\n      <Stack.Item styles={containerStyles}>\r\n        {!props.shareScreen ? (\r\n          props.callState === Constants.CONNECTED && (\r\n            <Stack horizontal styles={containerStyles}>\r\n              <Stack.Item grow styles={activeScreenShare ? activeContainerClassName : hiddenContainerClassName}>\r\n                {activeScreenShare && <MediaFullScreen activeScreenShareStream={props.screenShareStreams[0]} />}\r\n              </Stack.Item>\r\n              <Stack.Item grow styles={!activeScreenShare ? activeContainerClassName : hiddenContainerClassName}>\r\n                <MediaGallery />\r\n              </Stack.Item>\r\n              {selectedPane !== CommandPanelTypes.None && (\r\n                <Stack.Item disableShrink styles={paneStyles}>\r\n                  <CommandPanel {...props} selectedPane={selectedPane} setSelectedPane={setSelectedPane} />\r\n                </Stack.Item>\r\n              )}\r\n            </Stack>\r\n          )\r\n        ) : (\r\n          <div className={loadingStyle}>\r\n            <Label>Your screen is being shared</Label>\r\n          </div>\r\n        )}\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n};\r\n","import { Reducer } from 'redux';\r\nimport { AudioDeviceInfo, VideoDeviceInfo, DeviceManager } from '@azure/communication-calling';\r\nimport {\r\n  SET_DEVICE_MANAGER,\r\n  SET_AUDIO_DEVICE_INFO,\r\n  SET_AUDIO_DEVICE_LIST,\r\n  SET_CAMERA_PERMISSION,\r\n  SET_MICROPHONE_PERMISSION,\r\n  SET_VIDEO_DEVICE_INFO,\r\n  SET_VIDEO_DEVICE_LIST,\r\n  DeviceTypes\r\n} from '../actions/devices';\r\n\r\nexport interface DevicesState {\r\n  deviceManager?: DeviceManager;\r\n  audioDeviceInfo?: AudioDeviceInfo;\r\n  videoDeviceInfo?: VideoDeviceInfo;\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  cameraPermission?: string;\r\n  microphonePermission?: string;\r\n}\r\n\r\nconst initialState: DevicesState = {\r\n  deviceManager: undefined,\r\n  audioDeviceInfo: undefined,\r\n  videoDeviceInfo: undefined,\r\n  audioDeviceList: [],\r\n  videoDeviceList: [],\r\n  cameraPermission: undefined,\r\n  microphonePermission: undefined\r\n};\r\n\r\nexport const devicesReducer: Reducer<DevicesState, DeviceTypes> = (\r\n  state = initialState,\r\n  action: DeviceTypes\r\n): DevicesState => {\r\n  switch (action.type) {\r\n    case SET_DEVICE_MANAGER:\r\n      return { ...state, deviceManager: action.deviceManager };\r\n    case SET_VIDEO_DEVICE_INFO:\r\n      return { ...state, videoDeviceInfo: action.videoDeviceInfo };\r\n    case SET_AUDIO_DEVICE_INFO:\r\n      return { ...state, audioDeviceInfo: action.audioDeviceInfo };\r\n    case SET_VIDEO_DEVICE_LIST:\r\n      return { ...state, videoDeviceList: action.videoDeviceList };\r\n    case SET_AUDIO_DEVICE_LIST:\r\n      return { ...state, audioDeviceList: action.audioDeviceList };\r\n    case SET_CAMERA_PERMISSION:\r\n      return { ...state, cameraPermission: action.cameraPermission };\r\n    case SET_MICROPHONE_PERMISSION:\r\n      return { ...state, microphonePermission: action.microphonePermission };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Reducer } from 'redux';\r\nimport { LocalVideoStream } from '@azure/communication-calling';\r\nimport { ParticipantStream } from './index';\r\nimport {\r\n  SET_LOCAL_VIDEO_STREAM,\r\n  ADD_SCREENSHARE_STREAM,\r\n  RESET_STREAMS,\r\n  StreamTypes,\r\n  REMOVE_SCREENSHARE_STREAM\r\n} from '../actions/streams';\r\nimport { DeviceTypes, SET_VIDEO_DEVICE_INFO } from '../actions/devices';\r\n\r\nexport interface StreamsState {\r\n  streams: ParticipantStream[];\r\n  screenShareStreams: ParticipantStream[];\r\n  localVideoRendererIsBusy: boolean;\r\n  localVideoStream?: LocalVideoStream;\r\n}\r\n\r\nconst initialState: StreamsState = {\r\n  localVideoRendererIsBusy: false,\r\n  localVideoStream: undefined,\r\n  streams: [],\r\n  screenShareStreams: []\r\n};\r\n\r\nexport const streamsReducer: Reducer<StreamsState, StreamTypes | DeviceTypes> = (\r\n  state = initialState,\r\n  action: StreamTypes | DeviceTypes\r\n): StreamsState => {\r\n  switch (action.type) {\r\n    case SET_VIDEO_DEVICE_INFO:\r\n      if (state.localVideoStream && action.videoDeviceInfo) {\r\n        return { ...state, localVideoStream: new LocalVideoStream(action.videoDeviceInfo) };\r\n      }\r\n      return state;\r\n    case SET_LOCAL_VIDEO_STREAM:\r\n      return { ...state, localVideoStream: action.localVideoStream };\r\n    case ADD_SCREENSHARE_STREAM:\r\n      const newScreenShareStream: ParticipantStream = { stream: action.stream, user: action.user };\r\n      return { ...state, screenShareStreams: [...state.screenShareStreams, newScreenShareStream] };\r\n    case REMOVE_SCREENSHARE_STREAM:\r\n      const screenShareStreams = state.screenShareStreams.filter(\r\n        (stream) => stream.stream !== action.stream && stream.user !== action.user\r\n      );\r\n      return { ...state, screenShareStreams };\r\n    case RESET_STREAMS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Reducer } from 'redux';\r\nimport { SET_MIC, SET_SHARE_SCREEN, RESET_CONTROLS, ControlTypes } from '../actions/controls';\r\n\r\nexport interface ControlsState {\r\n  mic: boolean;\r\n  localVideo: boolean;\r\n  shareScreen: boolean;\r\n}\r\n\r\nconst initialState: ControlsState = {\r\n  mic: false,\r\n  localVideo: false,\r\n  shareScreen: false\r\n};\r\n\r\nexport const controlsReducer: Reducer<ControlsState, ControlTypes> = (\r\n  state = initialState,\r\n  action: ControlTypes\r\n): ControlsState => {\r\n  switch (action.type) {\r\n    case SET_MIC:\r\n      return { ...state, mic: action.mic };\r\n    case SET_SHARE_SCREEN:\r\n      return { ...state, shareScreen: action.shareScreen };\r\n    case RESET_CONTROLS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Call, CallEndReason, RemoteParticipant, CallAgent } from '@azure/communication-calling';\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  CALL_ADDED,\r\n  CALL_REMOVED,\r\n  SET_CALL_STATE,\r\n  SET_GROUP,\r\n  SET_PARTICIPANTS,\r\n  CallTypes,\r\n  SET_CALL_AGENT\r\n} from '../actions/calls';\r\n\r\nexport interface CallsState {\r\n  callAgent?: CallAgent;\r\n  group: string;\r\n  call?: Call;\r\n  callState: string;\r\n  incomingCallEndReason: CallEndReason | undefined;\r\n  groupCallEndReason: CallEndReason | undefined;\r\n  remoteParticipants: RemoteParticipant[];\r\n}\r\n\r\nconst initialState: CallsState = {\r\n  callAgent: undefined,\r\n  call: undefined,\r\n  callState: 'None',\r\n  incomingCallEndReason: undefined,\r\n  groupCallEndReason: undefined,\r\n  remoteParticipants: [],\r\n  group: ''\r\n};\r\n\r\nexport const callsReducer: Reducer<CallsState, CallTypes> = (state = initialState, action: CallTypes): CallsState => {\r\n  switch (action.type) {\r\n    case SET_CALL_AGENT:\r\n      return { ...state, callAgent: action.callAgent };\r\n    case CALL_ADDED:\r\n      return { ...state, call: action.call };\r\n    case CALL_REMOVED:\r\n      return {\r\n        ...state,\r\n        call: undefined,\r\n        remoteParticipants: [],\r\n        incomingCallEndReason: action.incomingCallEndReason,\r\n        groupCallEndReason: action.groupCallEndReason\r\n      };\r\n    case SET_CALL_STATE:\r\n      return { ...state, callState: action.callState };\r\n    case SET_PARTICIPANTS:\r\n      return { ...state, remoteParticipants: action.remoteParticipants };\r\n    case SET_GROUP:\r\n      return { ...state, group: action.group };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { RemoteParticipant, RemoteVideoStream } from '@azure/communication-calling';\r\nimport { combineReducers, Reducer } from 'redux';\r\nimport { devicesReducer, DevicesState } from '../reducers/devices';\r\nimport { streamsReducer, StreamsState } from './streams';\r\nimport { controlsReducer, ControlsState } from './controls';\r\nimport { SdkState, sdkReducer } from './sdk';\r\nimport { CallsState, callsReducer } from './calls';\r\n\r\nexport interface ParticipantStream {\r\n  user: RemoteParticipant;\r\n  stream: RemoteVideoStream | undefined;\r\n}\r\n\r\nexport interface State {\r\n  calls: CallsState;\r\n  devices: DevicesState;\r\n  streams: StreamsState;\r\n  controls: ControlsState;\r\n  sdk: SdkState;\r\n}\r\n\r\nexport const reducer: Reducer<State> = combineReducers({\r\n  calls: callsReducer,\r\n  devices: devicesReducer,\r\n  streams: streamsReducer,\r\n  controls: controlsReducer,\r\n  sdk: sdkReducer\r\n});\r\n","import { Reducer } from 'redux';\r\nimport { SET_USERID, SdkTypes } from '../actions/sdk';\r\n\r\nexport interface SdkState {\r\n  userId?: string;\r\n}\r\n\r\nexport const sdkReducer: Reducer<SdkState, SdkTypes> = (state = {}, action: SdkTypes): SdkState => {\r\n  switch (action.type) {\r\n    case SET_USERID:\r\n      return { ...state, userId: action.userId };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const SET_USERID = 'SET_USERID';\r\n\r\ninterface SetUserIdAction {\r\n  type: typeof SET_USERID;\r\n  userId: string;\r\n}\r\n\r\nexport const setUserId = (userId: string): SetUserIdAction => {\r\n  return {\r\n    type: SET_USERID,\r\n    userId\r\n  };\r\n};\r\n\r\nexport { SET_USERID };\r\n\r\nexport type SdkTypes = SetUserIdAction;\r\n","import { IStackTokens, mergeStyles } from '@fluentui/react';\r\n\r\nexport const mainStackTokens: IStackTokens = {\r\n  childrenGap: '0.25rem'\r\n};\r\nexport const buttonsStackTokens: IStackTokens = {\r\n  childrenGap: '0.75rem'\r\n};\r\nexport const upperStackTokens: IStackTokens = {\r\n  childrenGap: '1.5rem'\r\n};\r\nexport const bottomStackTokens: IStackTokens = {\r\n  childrenGap: '1.4375rem'\r\n};\r\nexport const endCallContainerStyle = mergeStyles({\r\n  width: '20.625rem'\r\n});\r\nexport const endCallTitleStyle = mergeStyles({\r\n  fontSize: '1.375rem',\r\n  fontWeight: 600\r\n});\r\nexport const buttonStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  height: '2.5rem',\r\n  width: '9.875rem',\r\n  fontSize: '0.875rem', // 14px\r\n  padding: 0\r\n});\r\nexport const videoCameraIconStyle = mergeStyles({\r\n  marginRight: '0.375rem',\r\n  fontSize: '1.375rem'\r\n});\r\nexport const bottomStackFooterStyle = mergeStyles({\r\n  color: 'rgb(0,0,0)',\r\n  fontSize: '0.875 rem'\r\n});\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport { DefaultButton, PrimaryButton, Stack } from '@fluentui/react';\r\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\r\nimport {\r\n  endCallContainerStyle,\r\n  endCallTitleStyle,\r\n  buttonStyle,\r\n  mainStackTokens,\r\n  buttonsStackTokens,\r\n  upperStackTokens,\r\n  videoCameraIconStyle,\r\n  bottomStackFooterStyle\r\n} from './styles/EndCall.styles';\r\n\r\nexport interface EndCallProps {\r\n  rejoinHandler(): void;\r\n  homeHandler(): void;\r\n}\r\n\r\nexport default (props: EndCallProps): JSX.Element => {\r\n  const leftCall = 'You left the call';\r\n  const goHomePage = 'Go to homepage';\r\n  const rejoinCall = 'Rejoin call';\r\n\r\n  return (\r\n    <Stack verticalAlign=\"center\" tokens={mainStackTokens} className={endCallContainerStyle}>\r\n      <Stack tokens={upperStackTokens}>\r\n        <div className={endCallTitleStyle}>{leftCall}</div>\r\n        <Stack horizontal tokens={buttonsStackTokens}>\r\n          <PrimaryButton className={buttonStyle} onClick={props.rejoinHandler}>\r\n            <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\r\n            {rejoinCall}\r\n          </PrimaryButton>\r\n          <DefaultButton className={buttonStyle} onClick={props.homeHandler}>\r\n            {goHomePage}\r\n          </DefaultButton>\r\n        </Stack>\r\n        <div className={bottomStackFooterStyle}>\r\n          <a href=\"https://github.com/Azure/Communication/issues\">Give Feedback</a>&nbsp;on this sample app on Github\r\n        </div>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import { IStackTokens, mergeStyles, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const imgStyle = mergeStyles({\r\n  width: '27.25rem',\r\n  height: '20.125rem',\r\n  selectors: {\r\n    '@media (max-width: 67.1875rem)': {\r\n      display: 'none'\r\n    }\r\n  }\r\n});\r\nexport const containerTokens: IStackTokens = {\r\n  childrenGap: '3.4375rem'\r\n};\r\nexport const upperStackTokens: IStackTokens = {\r\n  childrenGap: '2.625rem'\r\n};\r\nexport const nestedStackTokens: IStackTokens = {\r\n  childrenGap: '0.75rem'\r\n};\r\nexport const listStyle = mergeStyles({\r\n  listStyleType: 'none',\r\n  fontSize: '0.875rem'\r\n});\r\nexport const iconStyle = mergeStyles({\r\n  marginRight: '0.4375rem',\r\n  color: palette.themePrimary\r\n});\r\nexport const headerStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '2.25rem', // 36px\r\n  maxWidth: '23.188rem'\r\n});\r\nexport const videoCameraIconStyle = mergeStyles({\r\n  marginRight: '0.375rem',\r\n  fontSize: '1.375rem'\r\n});\r\nexport const buttonStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '0.875rem', // 14px\r\n  width: '7.75rem',\r\n  height: '2.5rem',\r\n  borderRadius: 3,\r\n  padding: '0.625rem'\r\n});\r\nexport const upperStackStyle = mergeStyles({\r\n  selectors: {\r\n    '@media (max-width: 53.4375rem)': {\r\n      padding: '0.625rem'\r\n    }\r\n  }\r\n});\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport { Stack, PrimaryButton, Image, IImageStyles } from '@fluentui/react';\r\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\r\nimport heroSVG from '../assets/hero.svg';\r\nimport {\r\n  imgStyle,\r\n  containerTokens,\r\n\r\n  headerStyle,\r\n  upperStackTokens,\r\n  videoCameraIconStyle,\r\n  buttonStyle,\r\n\r\n  upperStackStyle\r\n} from './styles/HomeScreen.styles';\r\n\r\nexport interface HomeScreenProps {\r\n  startCallHandler(): void;\r\n}\r\n\r\nconst imageStyleProps: IImageStyles = {\r\n  image: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  root: {}\r\n};\r\n\r\nexport default (props: HomeScreenProps): JSX.Element => {\r\n  \r\n  const imageProps = { src: heroSVG.toString() };\r\n  const headerTitle = 'The Family Video Call';\r\n  const startCallButtonText = 'Let\\'s go';\r\n  \r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\" verticalAlign=\"center\" tokens={containerTokens}>\r\n      <Stack className={upperStackStyle} tokens={upperStackTokens}>\r\n        <div className={headerStyle}>{headerTitle}</div>\r\n        {/* <input type=\"text\" id=\"entry-code\" value={entrycode} /> */}\r\n\r\n        <PrimaryButton className={buttonStyle} onClick={props.startCallHandler}>\r\n          <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\r\n          {startCallButtonText}\r\n        </PrimaryButton>\r\n      </Stack>\r\n      <Image\r\n        alt=\"Welcome to the ACS Calling sample app\"\r\n        className={imgStyle}\r\n        styles={imageStyleProps}\r\n        {...imageProps}\r\n      />\r\n    </Stack>\r\n  );\r\n};\r\n","import { IToggleStyles, IStackTokens, mergeStyles, IImageStyles, getTheme } from '@fluentui/react';\r\n\r\nconst palette = getTheme().palette;\r\nexport const toggleStyle: Partial<IToggleStyles> = {\r\n  root: { marginBottom: 0 }\r\n};\r\nexport const imgStyles: Partial<IImageStyles> = {\r\n  root: { width: '10rem', height: '10.5rem' }\r\n};\r\nexport const toggleButtonsBarToken: IStackTokens = {\r\n  childrenGap: '0.625rem',\r\n  padding: '0.625rem'\r\n};\r\nexport const localPreviewContainerStyle = mergeStyles({\r\n  maxWidth: '25rem',\r\n  minWidth: '12.5rem',\r\n  width: '100%',\r\n  height: '100%',\r\n  maxHeight: '18.75rem',\r\n  minHeight: '12.5rem',\r\n  background: palette.neutralLighter,\r\n  color: palette.neutralPrimaryAlt\r\n});\r\nexport const toggleButtonsBarStyle = mergeStyles({\r\n  height: '2.8125rem',\r\n  width: '100%',\r\n  backgroundColor: palette.neutralQuaternaryAlt\r\n});\r\nexport const localPreviewStyle = mergeStyles({\r\n  width: '100%',\r\n  height: '100%',\r\n  maxHeight: '15.9375rem',\r\n  transform: 'rotateY(180deg)'\r\n});\r\n","import { mergeStyles, IStackTokens } from '@fluentui/react';\r\n\r\nexport const configurationStackTokens: IStackTokens = {\r\n  childrenGap: '3rem'\r\n};\r\nexport const videoCameraIconStyle = mergeStyles({\r\n  marginRight: '0.375rem',\r\n  fontSize: '1.375rem'\r\n});\r\nexport const buttonStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '0.875rem', // 14px\r\n  height: '2.75rem',\r\n  width: '100%',\r\n  marginTop: '2.125rem',\r\n  maxWidth: '18.75rem',\r\n  minWidth: '12.5rem'\r\n});\r\nexport const mainContainerStyle = mergeStyles({\r\n  maxWidth: '46.875rem',\r\n  width: '100%',\r\n  height: '100%',\r\n  selectors: {\r\n    '@media (max-width: 750px)': {\r\n      padding: '0.625rem',\r\n      height: '100%'\r\n    }\r\n  }\r\n});\r\nexport const localSettingsContainerStyle = mergeStyles({\r\n  width: '100%',\r\n  maxWidth: '18.75rem'\r\n});\r\nexport const fullScreenStyle = mergeStyles({\r\n  height: '100%',\r\n  width: '100%'\r\n});\r\nexport const verticalStackStyle = mergeStyles({\r\n  height: '100%',\r\n  width: '100%',\r\n  justifyContent: 'space-evenly'\r\n});\r\nexport const localVideoWrapperStyle = mergeStyles({\r\n  minWidth: '12.5rem'\r\n});\r\n\r\nexport const inputBoxStyle = mergeStyles({\r\n  boxSizing: 'border-box',\r\n  height: '2.5rem',\r\n  width: '18.75rem',\r\n  border: '0.125rem solid #CCCCCC',\r\n  borderRadius: '0.188rem',\r\n  backgroundColor: '#FFFFFF'\r\n});\r\n\r\nexport const inputBoxTextStyle = mergeStyles({\r\n  fontSize: '0.875rem',\r\n  lineHeight: '1.5rem'\r\n});\r\n\r\nexport const inputBoxWarningStyle = mergeStyles({\r\n  boxSizing: 'border-box',\r\n  height: '2.5rem',\r\n  width: '18.75rem',\r\n  border: '0.125rem solid #e81123',\r\n  borderRadius: '0.188rem',\r\n  backgroundColor: '#FFFFFF',\r\n  fontSize: '0.875rem'\r\n});\r\n\r\nexport const labelFontStyle = mergeStyles({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 600,\r\n  color: 'rgb(50, 49, 48)',\r\n  boxSizing: 'border-box',\r\n  boxShadow: 'none',\r\n  margin: 0,\r\n  display: 'inline-block',\r\n  padding: '5px 0px',\r\n  overflowWrap: 'break-word'\r\n});\r\n\r\nexport const warningStyle = mergeStyles({\r\n  width: '18.75rem',\r\n  backgroundColor: '#FFFFFF',\r\n  marginTop: '0.188rem',\r\n  marginBottom: '0.188rem',\r\n  marginLeft: '0.188rem',\r\n  color: '#e81123',\r\n  fontSize: '.7375rem',\r\n  fontWeight: '400'\r\n});\r\n","import React from 'react';\r\nimport { TextField } from '@fluentui/react';\r\n\r\nimport {\r\n  inputBoxStyle,\r\n  inputBoxTextStyle,\r\n  inputBoxWarningStyle,\r\n  labelFontStyle,\r\n  warningStyle\r\n} from './styles/Configuration.styles';\r\n\r\ninterface DisplayNameFieldProps {\r\n  setName(name: string): void;\r\n  name: string;\r\n  setEmptyWarning(isEmpty: boolean): void;\r\n  isEmpty: boolean;\r\n}\r\n\r\nconst TextFieldStyleProps = {\r\n  root: {\r\n    height: 'auto'\r\n  }\r\n};\r\n\r\nexport default (props: DisplayNameFieldProps): JSX.Element => {\r\n  const onNameTextChange = (event: any) => {\r\n    props.setName(event.target.value);\r\n    if (event.target.value) {\r\n      props.setEmptyWarning(false);\r\n    } else {\r\n      props.setEmptyWarning(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={labelFontStyle}>Name</div>\r\n      <TextField\r\n        autoComplete=\"off\"\r\n        inputClassName={inputBoxTextStyle}\r\n        ariaLabel=\"Choose your name\"\r\n        borderless={true}\r\n        className={props.isEmpty ? inputBoxWarningStyle : inputBoxStyle}\r\n        onChange={onNameTextChange}\r\n        id=\"name\"\r\n        placeholder=\"Enter your name\"\r\n        defaultValue={props.name}\r\n        styles={TextFieldStyleProps}\r\n      />\r\n      {props.isEmpty && (\r\n        <div role=\"alert\" className={warningStyle}>\r\n          {' '}\r\n          Name cannot be empty{' '}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from 'react-redux';\r\nimport ConfigurationScreen, { ConfigurationScreenProps } from '../components/Configuration';\r\nimport { setGroup } from '../core/actions/calls';\r\nimport { setUserId } from '../core/actions/sdk';\r\nimport { setVideoDeviceInfo, setAudioDeviceInfo } from '../core/actions/devices';\r\nimport { initCallClient, updateDevices } from '../core/sideEffects';\r\nimport { setMic } from '../core/actions/controls';\r\nimport { State } from '../core/reducers';\r\nimport { AudioDeviceInfo, VideoDeviceInfo, LocalVideoStream } from '@azure/communication-calling';\r\nimport { setLocalVideoStream } from '../core/actions/streams';\r\n\r\nconst mapStateToProps = (state: State, props: ConfigurationScreenProps) => ({\r\n  deviceManager: state.devices.deviceManager,\r\n  callAgent: state.calls.callAgent,\r\n  userId: state.sdk.userId || props.userId,\r\n  group: state.calls.group,\r\n  mic: state.controls.mic,\r\n  screenWidth: props.screenWidth,\r\n  localVideoStream: state.streams.localVideoStream,\r\n  audioDeviceInfo: state.devices.audioDeviceInfo,\r\n  videoDeviceInfo: state.devices.videoDeviceInfo,\r\n  videoDeviceList: state.devices.videoDeviceList,\r\n  audioDeviceList: state.devices.audioDeviceList,\r\n  cameraPermission: state.devices.cameraPermission,\r\n  microphonePermission: state.devices.microphonePermission\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setLocalVideoStream: (localVideoStream: LocalVideoStream) => dispatch(setLocalVideoStream(localVideoStream)),\r\n  setMic: (mic: boolean) => dispatch(setMic(mic)),\r\n  setAudioDeviceInfo: (deviceInfo: AudioDeviceInfo) => dispatch(setAudioDeviceInfo(deviceInfo)),\r\n  setVideoDeviceInfo: (deviceInfo: VideoDeviceInfo) => dispatch(setVideoDeviceInfo(deviceInfo)),\r\n  initCallClient: (userId: string, unsupportedStateHandler: () => void, endCallHandler: () => void) =>\r\n    dispatch(initCallClient(userId, unsupportedStateHandler, endCallHandler)),\r\n  setUserId: (userId: string) => dispatch(setUserId(userId)),\r\n  setGroup: (groupId: string) => dispatch(setGroup(groupId)),\r\n  updateDevices: () => dispatch(updateDevices())\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connector(ConfigurationScreen);\r\n","// © Microsoft Corporation. All rights reserved.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Stack, Spinner, PrimaryButton } from '@fluentui/react';\r\nimport LocalPreview from './LocalPreview';\r\nimport LocalSettings from './LocalSettings';\r\nimport DisplayNameField from './DisplayNameField';\r\nimport {\r\n  VideoDeviceInfo,\r\n  AudioDeviceInfo,\r\n  LocalVideoStream,\r\n  DeviceManager,\r\n  CallAgent\r\n} from '@azure/communication-calling';\r\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\r\nimport {\r\n  videoCameraIconStyle,\r\n  configurationStackTokens,\r\n  buttonStyle,\r\n  localSettingsContainerStyle,\r\n  mainContainerStyle,\r\n  fullScreenStyle,\r\n  verticalStackStyle\r\n} from './styles/Configuration.styles';\r\n\r\nexport interface ConfigurationScreenProps {\r\n  userId: string;\r\n  groupId: string;\r\n  callAgent: CallAgent;\r\n  deviceManager: DeviceManager;\r\n  setUserId(userId: string): void;\r\n  initCallClient(userId: string, unsupportedStateHandler: () => void, endCallhandler: () => void): void;\r\n  setGroup(groupId: string): void;\r\n  startCallHandler(): void;\r\n  unsupportedStateHandler: () => void;\r\n  endCallHandler: () => void;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n  setMic(mic: boolean): void;\r\n  setLocalVideoStream(stream: LocalVideoStream | undefined): void;\r\n  localVideoRendererIsBusy: boolean;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  localVideoStream: LocalVideoStream;\r\n  screenWidth: number;\r\n}\r\n\r\nexport default (props: ConfigurationScreenProps): JSX.Element => {\r\n  const spinnerLabel = 'Initializing call client...';\r\n  const buttonText = 'Start call';\r\n\r\n  const [name, setName] = useState(props.userId);\r\n  const [emptyWarning, setEmptyWarning] = useState(false);\r\n\r\n  const { userId, groupId, setUserId, initCallClient, setGroup, unsupportedStateHandler, endCallHandler } = props;\r\n\r\n  useEffect(() => {\r\n    setUserId(userId);\r\n    initCallClient(userId, unsupportedStateHandler, endCallHandler);\r\n    setGroup(groupId);\r\n  }, [userId, groupId, setUserId, initCallClient, setGroup, unsupportedStateHandler, endCallHandler]);\r\n\r\n  return (\r\n    <Stack className={mainContainerStyle} horizontalAlign=\"center\" verticalAlign=\"center\">\r\n      {props.deviceManager ? (\r\n        <Stack\r\n          className={props.screenWidth > 750 ? fullScreenStyle : verticalStackStyle}\r\n          horizontal={props.screenWidth > 750}\r\n          horizontalAlign=\"center\"\r\n          verticalAlign=\"center\"\r\n          tokens={props.screenWidth > 750 ? configurationStackTokens : undefined}\r\n        >\r\n          <LocalPreview\r\n            setMic={props.setMic}\r\n            setLocalVideoStream={props.setLocalVideoStream}\r\n            videoDeviceInfo={props.videoDeviceInfo}\r\n            audioDeviceInfo={props.audioDeviceInfo}\r\n            localVideoStream={props.localVideoStream}\r\n          />\r\n          <Stack className={localSettingsContainerStyle}>\r\n            <DisplayNameField setName={setName} name={name} setEmptyWarning={setEmptyWarning} isEmpty={emptyWarning} />\r\n            <div>\r\n              <LocalSettings\r\n                videoDeviceList={props.videoDeviceList}\r\n                audioDeviceList={props.audioDeviceList}\r\n                audioDeviceInfo={props.audioDeviceInfo}\r\n                videoDeviceInfo={props.videoDeviceInfo}\r\n                setVideoDeviceInfo={props.setVideoDeviceInfo}\r\n                setAudioDeviceInfo={props.setAudioDeviceInfo}\r\n              />\r\n            </div>\r\n            <div>\r\n              <PrimaryButton\r\n                className={buttonStyle}\r\n                onClick={() => {\r\n                  if (!name) {\r\n                    setEmptyWarning(true);\r\n                  } else {\r\n                    setEmptyWarning(false);\r\n                    props.setUserId(name);\r\n                    props.callAgent.updateDisplayName(name);\r\n                    props.startCallHandler();\r\n                  }\r\n                }}\r\n              >\r\n                <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\r\n                {buttonText}\r\n              </PrimaryButton>\r\n            </div>\r\n          </Stack>\r\n        </Stack>\r\n      ) : (\r\n        <Spinner label={spinnerLabel} ariaLive=\"assertive\" labelPosition=\"top\" />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React, { useState, useEffect } from 'react';\r\nimport GroupCall from './containers/GroupCall';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { reducer } from './core/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport EndCall from './components/EndCall';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport ConfigurationScreen from './containers/Configuration';\r\n\r\nimport { loadTheme, initializeIcons } from '@fluentui/react';\r\nimport { utils } from './Utils/Utils';\r\n\r\nconst sdkVersion = require('../package.json').dependencies['@azure/communication-calling'];\r\nconst lastUpdated = `Last Updated ${utils.getBuildTime()} with @azure/communication-calling:${sdkVersion}`;\r\n\r\nloadTheme({});\r\ninitializeIcons();\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nconst App = () => {\r\n  const [page, setPage] = useState('home');\r\n  // const [groupId, setGroupId] = useState('');\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const setWindowWidth = () => {\r\n      const width = typeof window !== 'undefined' ? window.innerWidth : 0;\r\n      setScreenWidth(width);\r\n    };\r\n    setWindowWidth();\r\n    window.addEventListener('resize', setWindowWidth);\r\n    return () => window.removeEventListener('resize', setWindowWidth);\r\n  }, []);\r\n\r\n  const createUserId = () => 'user' + Math.ceil(Math.random() * 1000);\r\n\r\n  const getGroupIdFromUrl = () => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get('groupId');\r\n  };\r\n\r\n  // const getGroupId = () => {\r\n  //   if (groupId) return groupId;\r\n  //   const uri_gid = getGroupIdFromUrl();\r\n  //   const gid = uri_gid == null || uri_gid === '' ? createGUID() : uri_gid;\r\n  //   console.log('The group id is ' + gid);\r\n  //   setGroupId(gid);\r\n  //   return gid;\r\n  // };\r\n\r\n  const getGroupId = () => {\r\n    utils.getGroupID().then(response => {\r\n    return response;\r\n    });\r\n  }\r\n\r\n  const getContent = () => {\r\n    if (page === 'home') {\r\n      return (\r\n        <HomeScreen\r\n          startCallHandler={() => {\r\n            window.history.pushState({}, document.title, window.location.href + '?groupId=' + getGroupId());\r\n          }}\r\n        />\r\n      );\r\n    } else if (page === 'configuration') {\r\n      return (\r\n        <ConfigurationScreen\r\n          startCallHandler={() => setPage('call')}\r\n          unsupportedStateHandler={() => setPage('error')}\r\n          endCallHandler={() => setPage('endCall')}\r\n          groupId={getGroupId()}\r\n          userId={createUserId()}\r\n          screenWidth={screenWidth}\r\n        />\r\n      );\r\n    } else if (page === 'call') {\r\n      return (\r\n        <GroupCall\r\n          endCallHandler={() => setPage('endCall')}\r\n          groupId={getGroupId()}\r\n          userId={createUserId()}\r\n          screenWidth={screenWidth}\r\n        />\r\n      );\r\n    } else if (page === 'endCall') {\r\n      return (\r\n        <EndCall\r\n          rejoinHandler={() => {\r\n            setPage('call');\r\n          }}\r\n          homeHandler={() => {\r\n            window.location.href = window.location.href.split('?')[0];\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      // page === 'error'\r\n      window.document.title = 'Unsupported browser';\r\n      return (\r\n        <>\r\n          <a href=\"https://aka.ms/ACS-CallingSupport#calling-client-library-browser-support\">Learn more</a>&nbsp;about\r\n          browsers and platforms supported by the web calling sdk\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (getGroupIdFromUrl() && page === 'home') {\r\n    setPage('configuration');\r\n  }\r\n\r\n  if (utils.isMobileSession() || utils.isSmallScreen()) {\r\n    console.log('ACS Calling sample: This is experimental behaviour');\r\n  }\r\n\r\n  return <Provider store={store}>{getContent()}</Provider>;\r\n};\r\n\r\nwindow.setTimeout(() => {\r\n  try {\r\n    console.log(`ACS sample group calling app: ${lastUpdated}`);\r\n  } catch (e) {}\r\n}, 0);\r\n\r\nexport default App;\r\n","// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from '@fluentui/react-northstar';\r\nimport { svgIconStyles } from '@fluentui/react-northstar/dist/es/themes/teams/components/SvgIcon/svgIconStyles';\r\nimport { svgIconVariables } from '@fluentui/react-northstar/dist/es/themes/teams/components/SvgIcon/svgIconVariables';\r\nimport * as siteVariables from '@fluentui/react-northstar/dist/es/themes/teams/siteVariables';\r\n\r\nconst iconTheme = {\r\n  componentStyles: {\r\n    SvgIcon: svgIconStyles\r\n  },\r\n  componentVariables: {\r\n    SvgIcon: svgIconVariables\r\n  },\r\n  siteVariables\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider theme={iconTheme} className=\"wrapper\">\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/staticmedia.19456955.svg\";"],"sourceRoot":""}